{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1","program":"/home/aaron/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tungstenite","--edition=2018","/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=115e92d195cf11cb","-C","extra-filename=-115e92d195cf11cb","--out-dir","/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps","-L","dependency=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps","--extern","base64=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libbase64-1d1fa0a77822fd50.rmeta","--extern","byteorder=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libbyteorder-f49457a38753d563.rmeta","--extern","bytes=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libbytes-745c892adca96516.rmeta","--extern","http=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libhttp-fe8d15cd6bf5ce2a.rmeta","--extern","httparse=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libhttparse-49f9b7a189207fb6.rmeta","--extern","log=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/liblog-d8da3cc9d88c8cb5.rmeta","--extern","rand=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/librand-db9b90c5bd468cf7.rmeta","--extern","sha1=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libsha1-0306912f5227e2de.rmeta","--extern","thiserror=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libthiserror-23217ea262c5eaf0.rmeta","--extern","url=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/liburl-d086389cd3c3766e.rmeta","--extern","utf8=/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libutf8-e211bd32154fd498.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/aaron/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/aaron/Documents/Repos/CHUT/socket/target/rls/debug/deps/libtungstenite-115e92d195cf11cb.rmeta"},"prelude":{"crate_id":{"name":"tungstenite","disambiguator":[14808002499620142175,0]},"crate_root":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src","external_crates":[{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":20,"id":{"name":"http","disambiguator":[4062785899610948728,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":21,"id":{"name":"fnv","disambiguator":[16312022085249771470,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","num":22,"id":{"name":"bytes","disambiguator":[2813700149091360425,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","num":23,"id":{"name":"itoa","disambiguator":[14686046432358004959,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":24,"id":{"name":"log","disambiguator":[6152542194788951292,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":25,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":26,"id":{"name":"url","disambiguator":[553307923625645692,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":27,"id":{"name":"matches","disambiguator":[3607406961359750215,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":28,"id":{"name":"form_urlencoded","disambiguator":[7981031473752466622,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":29,"id":{"name":"percent_encoding","disambiguator":[13151442262755917877,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":30,"id":{"name":"idna","disambiguator":[17681977150817196198,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":31,"id":{"name":"unicode_bidi","disambiguator":[14679122990056986109,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":32,"id":{"name":"unicode_normalization","disambiguator":[15199685211129427679,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":33,"id":{"name":"tinyvec","disambiguator":[3251514670399407899,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","num":34,"id":{"name":"tinyvec_macros","disambiguator":[4093932651488933425,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","num":35,"id":{"name":"thiserror","disambiguator":[13922364736287205536,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","num":36,"id":{"name":"thiserror_impl","disambiguator":[7686577994006513775,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":37,"id":{"name":"httparse","disambiguator":[15377816624036720683,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":38,"id":{"name":"sha1","disambiguator":[18239539919553963027,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":39,"id":{"name":"digest","disambiguator":[1109540362382353559,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":40,"id":{"name":"crypto_common","disambiguator":[10460961340986733251,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":41,"id":{"name":"generic_array","disambiguator":[8838553505164464596,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":42,"id":{"name":"typenum","disambiguator":[18190153633746893416,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":43,"id":{"name":"block_buffer","disambiguator":[1448951049150356557,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","num":44,"id":{"name":"cpufeatures","disambiguator":[9182769687939424057,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","num":45,"id":{"name":"byteorder","disambiguator":[12965691627307960368,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","num":46,"id":{"name":"utf8","disambiguator":[11205730164415055218,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":47,"id":{"name":"rand","disambiguator":[10996528933456987198,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":48,"id":{"name":"rand_core","disambiguator":[5007165633368416104,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":49,"id":{"name":"getrandom","disambiguator":[11270332047779181570,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":50,"id":{"name":"libc","disambiguator":[2000753584118294429,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":51,"id":{"name":"rand_chacha","disambiguator":[5584306783408992504,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":52,"id":{"name":"ppv_lite86","disambiguator":[5423593114259812983,0]}},{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","num":53,"id":{"name":"base64","disambiguator":[2947610652793182582,0]}}],"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":306,"byte_end":310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89506,"byte_end":89516,"line_start":13,"line_end":13,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89518,"byte_end":89523,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89525,"byte_end":89536,"line_start":13,"line_end":13,"column_start":42,"column_end":53},"alias_span":null,"name":"FrameHeader","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59446,"byte_end":59456,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":1806},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59467,"byte_end":59474,"line_start":7,"line_end":7,"column_start":44,"column_end":51},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":648,"byte_end":654,"line_start":32,"line_end":32,"column_start":14,"column_end":20},"alias_span":null,"name":"client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":656,"byte_end":663,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":678,"byte_end":683,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":685,"byte_end":691,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1507},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":718,"byte_end":733,"line_start":34,"line_end":34,"column_start":25,"column_end":40},"alias_span":null,"name":"ClientHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":743,"byte_end":758,"line_start":34,"line_end":34,"column_start":50,"column_end":65},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":760,"byte_end":774,"line_start":34,"line_end":34,"column_start":67,"column_end":81},"alias_span":null,"name":"HandshakeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1806},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":792,"byte_end":799,"line_start":35,"line_end":35,"column_start":16,"column_end":23},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1862},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":801,"byte_end":810,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":826,"byte_end":832,"line_start":36,"line_end":36,"column_start":14,"column_end":20},"alias_span":null,"name":"accept","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":834,"byte_end":844,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"alias_span":null,"name":"accept_hdr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":846,"byte_end":868,"line_start":36,"line_end":36,"column_start":34,"column_end":56},"alias_span":null,"name":"accept_hdr_with_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":870,"byte_end":888,"line_start":36,"line_end":36,"column_start":58,"column_end":76},"alias_span":null,"name":"accept_with_config","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":40},{"krate":0,"index":164},{"krate":0,"index":214},{"krate":0,"index":614},{"krate":0,"index":1126},{"krate":0,"index":1165},{"krate":0,"index":1209},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283}],"decl_id":null,"docs":" Lightweight, flexible WebSockets for Rust.\n","sig":null,"attributes":[{"value":"/ Lightweight, flexible WebSockets for Rust.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"deny(missing_docs, missing_copy_implementations,\n       missing_debug_implementations, trivial_casts, trivial_numeric_casts,\n       unstable_features, unused_must_use, unused_mut, unused_imports,\n       unused_import_braces)","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":47,"byte_end":296,"line_start":2,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":20},{"krate":0,"index":32},{"krate":0,"index":37}],"decl_id":null,"docs":" A buffer for reading data from the network.","sig":null,"attributes":[{"value":"/ A buffer for reading data from the network.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1020,"byte_end":1067,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1068,"byte_end":1071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `ReadBuffer` is a buffer of bytes similar to a first-in, first-out queue.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1072,"byte_end":1153,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ It is filled by reading from a stream supporting `Read` and is then","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1154,"byte_end":1225,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ accessible as a cursor for reading bytes.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1226,"byte_end":1271,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1424,"byte_end":1434,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ReadBuffer","qualname":"::buffer::ReadBuffer","value":"ReadBuffer {  }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"decl_id":null,"docs":" A FIFO buffer for reading packets from the network.\n","sig":null,"attributes":[{"value":"/ A FIFO buffer for reading packets from the network.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1340,"byte_end":1395,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1636,"byte_end":1639,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuffer<CHUNK_SIZE>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1588,"byte_end":1624,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1775,"byte_end":1788,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReadBuffer<CHUNK_SIZE>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer with a given `capacity`.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer with a given `capacity`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1703,"byte_end":1763,"line_start":24,"line_end":24,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1962,"byte_end":1981,"line_start":30,"line_end":30,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<ReadBuffer<CHUNK_SIZE>>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a input buffer filled with previously read data.\n","sig":null,"attributes":[{"value":"/ Create a input buffer filled with previously read data.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1891,"byte_end":1950,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2145,"byte_end":2154,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor","value":"pub fn as_cursor(&Self) -> &Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the data storage.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2096,"byte_end":2133,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2274,"byte_end":2287,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"as_cursor_mut","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor_mut","value":"pub fn as_cursor_mut(&mut Self) -> &mut Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the mutable data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the mutable data storage.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2217,"byte_end":2262,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2432,"byte_end":2440,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ReadBuffer<CHUNK_SIZE>>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `ReadBuffer` and get the internal storage.\n","sig":null,"attributes":[{"value":"/ Consume the `ReadBuffer` and get the internal storage.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2362,"byte_end":2420,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2837,"byte_end":2846,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"read_from","qualname":"<ReadBuffer<CHUNK_SIZE>>::read_from","value":"pub fn read_from<S: Read>(&mut Self, &mut S) -> IoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read next portion of data from the given input stream.\n","sig":null,"attributes":[{"value":"/ Read next portion of data from the given input stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":2767,"byte_end":2825,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157}],"decl_id":null,"docs":" Methods to connect to a WebSocket as a client.\n","sig":null,"attributes":[{"value":"/ Methods to connect to a WebSocket as a client.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":4838,"byte_end":4888,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":6208,"byte_end":6227,"line_start":42,"line_end":42,"column_start":8,"column_end":27},"name":"connect_with_config","qualname":"::client::connect_with_config","value":"pub fn connect_with_config<Req: IntoClientRequest>(Req,\n                                                   Option<WebSocketConfig>,\n                                                   u8)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5372,"byte_end":5424,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5425,"byte_end":5428,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Uses a websocket configuration passed as an argument to the function. Calling it with `None` is","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5429,"byte_end":5528,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/ equal to calling `connect()` function.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5529,"byte_end":5571,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5572,"byte_end":5575,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5576,"byte_end":5618,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5619,"byte_end":5702,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5703,"byte_end":5706,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5707,"byte_end":5784,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5785,"byte_end":5858,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5859,"byte_end":5900,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5901,"byte_end":5904,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":5905,"byte_end":6005,"line_start":39,"line_end":39,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":6006,"byte_end":6102,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":6103,"byte_end":6200,"line_start":41,"line_end":41,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9425,"byte_end":9432,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"pub fn connect<Req: IntoClientRequest>(Req)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8736,"byte_end":8788,"line_start":104,"line_end":104,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8789,"byte_end":8792,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8793,"byte_end":8835,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8836,"byte_end":8919,"line_start":107,"line_end":107,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8920,"byte_end":8923,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":8924,"byte_end":9001,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9002,"byte_end":9075,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9076,"byte_end":9117,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9118,"byte_end":9121,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9122,"byte_end":9222,"line_start":113,"line_end":113,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9223,"byte_end":9319,"line_start":114,"line_end":114,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9320,"byte_end":9417,"line_start":115,"line_end":115,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10130,"byte_end":10138,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"uri_mode","qualname":"::client::uri_mode","value":"pub fn uri_mode(&Uri) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Get the mode of the given URL.","sig":null,"attributes":[{"value":"/ Get the mode of the given URL.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9913,"byte_end":9947,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9948,"byte_end":9951,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This function may be used to ease the creation of custom TLS streams","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":9952,"byte_end":10024,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/ in non-blocking algorithms or for use with TLS libraries other than `native_tls` or `rustls`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10025,"byte_end":10122,"line_start":135,"line_end":135,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10732,"byte_end":10750,"line_start":150,"line_end":150,"column_start":8,"column_end":26},"name":"client_with_config","qualname":"::client::client_with_config","value":"pub fn client_with_config<Stream, Req>(Req, Stream, Option<WebSocketConfig>)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream given a web socket configuration. Passing `None`\n as configuration is equal to calling `client()` function.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream given a web socket configuration. Passing `None`","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10345,"byte_end":10443,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ as configuration is equal to calling `client()` function.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10444,"byte_end":10505,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10506,"byte_end":10509,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10510,"byte_end":10585,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10586,"byte_end":10674,"line_start":148,"line_end":148,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":10675,"byte_end":10724,"line_start":149,"line_end":149,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11357,"byte_end":11363,"line_start":167,"line_end":167,"column_start":8,"column_end":14},"name":"client","qualname":"::client::client","value":"pub fn client<Stream, Req>(Req, Stream)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11080,"byte_end":11130,"line_start":162,"line_end":162,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11131,"byte_end":11134,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11135,"byte_end":11210,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11211,"byte_end":11299,"line_start":165,"line_end":165,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11300,"byte_end":11349,"line_start":166,"line_end":166,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12250,"byte_end":12267,"line_start":186,"line_end":186,"column_start":11,"column_end":28},"name":"IntoClientRequest","qualname":"::client::IntoClientRequest","value":"IntoClientRequest","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Trait for converting various types into HTTP requests used for a client connection.","sig":null,"attributes":[{"value":"/ Trait for converting various types into HTTP requests used for a client connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11614,"byte_end":11701,"line_start":178,"line_end":178,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11702,"byte_end":11705,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for string slices, strings, `url::Url`, `http::Uri` and","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11706,"byte_end":11802,"line_start":180,"line_end":180,"column_start":1,"column_end":97}},{"value":"/ `http::Request<()>`. Note that the implementation for `http::Request<()>` is trivial and will","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11803,"byte_end":11900,"line_start":181,"line_end":181,"column_start":1,"column_end":98}},{"value":"/ simply take your request and pass it as is further without altering any headers or URLs, so","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11901,"byte_end":11996,"line_start":182,"line_end":182,"column_start":1,"column_end":96}},{"value":"/ be aware of this. If you just want to connect to the endpoint with a certain URL, better pass","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":11997,"byte_end":12094,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ a regular string containing the URL in which case `tungstenite-rs` will take care for generating","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12095,"byte_end":12195,"line_start":184,"line_end":184,"column_start":1,"column_end":101}},{"value":"/ the proper `http::Request<()>` for you.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12196,"byte_end":12239,"line_start":185,"line_end":185,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12352,"byte_end":12371,"line_start":188,"line_end":188,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"::client::IntoClientRequest::into_client_request","value":"pub fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Convert into a `Request` that can be used for a client connection.\n","sig":null,"attributes":[{"value":"/ Convert into a `Request` that can be used for a client connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12274,"byte_end":12344,"line_start":187,"line_end":187,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":164},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1301},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1388},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1505}],"decl_id":null,"docs":" Error handling.\n","sig":null,"attributes":[{"value":"/ Error handling.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14454,"byte_end":14473,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14689,"byte_end":14695,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Result type of all Tungstenite library calls.\n","sig":null,"attributes":[{"value":"/ Result type of all Tungstenite library calls.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14630,"byte_end":14679,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15487,"byte_end":15503,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::error::Error::ConnectionClosed","value":"Error::ConnectionClosed","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" WebSocket connection closed normally. This informs you of the close.\n It's not an error as such and nothing wrong happened.","sig":null,"attributes":[{"value":"/ WebSocket connection closed normally. This informs you of the close.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14811,"byte_end":14883,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ It's not an error as such and nothing wrong happened.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14888,"byte_end":14945,"line_start":16,"line_end":16,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14950,"byte_end":14953,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This is returned as soon as the close handshake is finished (we have both sent and","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14958,"byte_end":15044,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ received a close frame) on the server end and as soon as the server has closed the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15049,"byte_end":15135,"line_start":19,"line_end":19,"column_start":5,"column_end":91}},{"value":"/ underlying connection if this endpoint is a client.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15140,"byte_end":15195,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15200,"byte_end":15203,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Thus when you receive this, it is safe to drop the underlying connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15208,"byte_end":15285,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15290,"byte_end":15293,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Receiving this error means that the WebSocket object is not usable anymore and the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15298,"byte_end":15384,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ only meaningful action with it is dropping it.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15389,"byte_end":15439,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"error(\"Connection closed normally\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15444,"byte_end":15482,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15924,"byte_end":15937,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::error::Error::AlreadyClosed","value":"Error::AlreadyClosed","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Trying to work with already closed connection.","sig":null,"attributes":[{"value":"/ Trying to work with already closed connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15509,"byte_end":15559,"line_start":28,"line_end":28,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15564,"byte_end":15567,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Trying to read or write after receiving `ConnectionClosed` causes this.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15572,"byte_end":15647,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15652,"byte_end":15655,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As opposed to `ConnectionClosed`, this indicates your code tries to operate on the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15660,"byte_end":15746,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ connection when it really shouldn't anymore, so this really indicates a programmer","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15751,"byte_end":15837,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ error on your part.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15842,"byte_end":15865,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"error(\"Trying to work with closed connection\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15870,"byte_end":15919,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16135,"byte_end":16137,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Input-output error. Apart from WouldBlock, these are generally errors with the\n underlying connection and you should probably consider them fatal.\n","sig":null,"attributes":[{"value":"/ Input-output error. Apart from WouldBlock, these are generally errors with the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":15943,"byte_end":16025,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ underlying connection and you should probably consider them fatal.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16030,"byte_end":16100,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"error(\"IO error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16105,"byte_end":16130,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16370,"byte_end":16373,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" TLS error.","sig":null,"attributes":[{"value":"/ TLS error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16162,"byte_end":16176,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16181,"byte_end":16184,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this error variant is enabled unconditionally even if no TLS feature is enabled,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16189,"byte_end":16283,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ to provide a feature-agnostic API surface.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16288,"byte_end":16334,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"error(\"TLS error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16339,"byte_end":16365,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16603,"byte_end":16611,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::error::Error::Capacity","value":"Error::Capacity(CapacityError)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" - When reading: buffer capacity exhausted.\n - When writing: your message is bigger than the configured max message size\n   (64MB by default).\n","sig":null,"attributes":[{"value":"/ - When reading: buffer capacity exhausted.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16397,"byte_end":16443,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/ - When writing: your message is bigger than the configured max message size","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16448,"byte_end":16527,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/   (64MB by default).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16532,"byte_end":16556,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"error(\"Space limit exceeded: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16561,"byte_end":16598,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16714,"byte_end":16722,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::error::Error::Protocol","value":"Error::Protocol(ProtocolError)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Protocol violation.\n","sig":null,"attributes":[{"value":"/ Protocol violation.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16640,"byte_end":16663,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"WebSocket protocol error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16668,"byte_end":16709,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1340},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16819,"byte_end":16832,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"SendQueueFull","qualname":"::error::Error::SendQueueFull","value":"Error::SendQueueFull(Message)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Message send queue full.\n","sig":null,"attributes":[{"value":"/ Message send queue full.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16751,"byte_end":16779,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"error(\"Send queue is full\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16784,"byte_end":16814,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1343},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16910,"byte_end":16914,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::Error::Utf8","value":"Error::Utf8","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" UTF coding error.\n","sig":null,"attributes":[{"value":"/ UTF coding error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16847,"byte_end":16868,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"error(\"UTF-8 encoding error\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16873,"byte_end":16905,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16972,"byte_end":16975,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Url","qualname":"::error::Error::Url","value":"Error::Url(UrlError)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Invalid URL.\n","sig":null,"attributes":[{"value":"/ Invalid URL.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16920,"byte_end":16936,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"error(\"URL error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16941,"byte_end":16967,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17063,"byte_end":17067,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Http","qualname":"::error::Error::Http","value":"Error::Http(Response<Option<String>>)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" HTTP error.\n","sig":null,"attributes":[{"value":"/ HTTP error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":16999,"byte_end":17014,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"error(\"HTTP error: {}\",.0.status())","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17019,"byte_end":17058,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17165,"byte_end":17175,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"HttpFormat","qualname":"::error::Error::HttpFormat","value":"Error::HttpFormat(http::Error)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" HTTP format error.\n","sig":null,"attributes":[{"value":"/ HTTP format error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17099,"byte_end":17121,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"error(\"HTTP format error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17126,"byte_end":17160,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1295},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14799,"byte_end":14804,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConnectionClosed,\n    AlreadyClosed,\n    Io(io::Error),\n    Tls(TlsError),\n    Capacity(CapacityError),\n    Protocol(ProtocolError),\n    SendQueueFull(Message),\n    Utf8,\n    Url(UrlError),\n    Http(Response<Option<String>>),\n    HttpFormat(http::Error),\n}","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351}],"decl_id":null,"docs":" Possible WebSocket errors.\n","sig":null,"attributes":[{"value":"/ Possible WebSocket errors.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":14735,"byte_end":14765,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18723,"byte_end":18737,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::error::CapacityError::TooManyHeaders","value":"CapacityError::TooManyHeaders","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n","sig":null,"attributes":[{"value":"/ Too many headers provided (see [`httparse::Error::TooManyHeaders`]).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18613,"byte_end":18685,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"error(\"Too many headers\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18690,"byte_end":18718,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18891,"byte_end":18905,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"MessageTooLong","qualname":"::error::CapacityError::MessageTooLong","value":"CapacityError::MessageTooLong { size, max_size }","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" Received header is too long.\n Message is bigger than the maximum allowed size.\n","sig":null,"attributes":[{"value":"/ Received header is too long.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18743,"byte_end":18775,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/ Message is bigger than the maximum allowed size.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18780,"byte_end":18832,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"error(\"Message too long: {size} > {max_size}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18837,"byte_end":18886,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1354},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18593,"byte_end":18606,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"CapacityError","qualname":"::error::CapacityError","value":"pub enum CapacityError {\n    TooManyHeaders,\n    MessageTooLong {\n        size: usize,\n        max_size: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1379}],"decl_id":null,"docs":" Indicates the specific type/cause of a capacity error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a capacity error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18473,"byte_end":18531,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19343,"byte_end":19358,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"WrongHttpMethod","qualname":"::error::ProtocolError::WrongHttpMethod","value":"ProtocolError::WrongHttpMethod","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n","sig":null,"attributes":[{"value":"/ Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19181,"byte_end":19271,"line_start":143,"line_end":143,"column_start":5,"column_end":95}},{"value":"error(\"Unsupported HTTP method used - only GET is allowed\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19276,"byte_end":19338,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19504,"byte_end":19520,"line_start":148,"line_end":148,"column_start":5,"column_end":21},"name":"WrongHttpVersion","qualname":"::error::ProtocolError::WrongHttpVersion","value":"ProtocolError::WrongHttpVersion","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n","sig":null,"attributes":[{"value":"/ Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19364,"byte_end":19448,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"error(\"HTTP version must be 1.1 or higher\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19453,"byte_end":19499,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19627,"byte_end":19657,"line_start":151,"line_end":151,"column_start":5,"column_end":35},"name":"MissingConnectionUpgradeHeader","qualname":"::error::ProtocolError::MissingConnectionUpgradeHeader","value":"ProtocolError::MissingConnectionUpgradeHeader","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Missing `Connection: upgrade` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Connection: upgrade` HTTP header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19526,"byte_end":19572,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"error(\"No \\\"Connection: upgrade\\\" header\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19577,"byte_end":19622,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19762,"byte_end":19791,"line_start":154,"line_end":154,"column_start":5,"column_end":34},"name":"MissingUpgradeWebSocketHeader","qualname":"::error::ProtocolError::MissingUpgradeWebSocketHeader","value":"ProtocolError::MissingUpgradeWebSocketHeader","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Missing `Upgrade: websocket` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Upgrade: websocket` HTTP header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19663,"byte_end":19708,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"error(\"No \\\"Upgrade: websocket\\\" header\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19713,"byte_end":19757,"line_start":153,"line_end":153,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19910,"byte_end":19942,"line_start":157,"line_end":157,"column_start":5,"column_end":37},"name":"MissingSecWebSocketVersionHeader","qualname":"::error::ProtocolError::MissingSecWebSocketVersionHeader","value":"ProtocolError::MissingSecWebSocketVersionHeader","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Version: 13` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Version: 13` HTTP header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19797,"byte_end":19849,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19854,"byte_end":19905,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20045,"byte_end":20067,"line_start":160,"line_end":160,"column_start":5,"column_end":27},"name":"MissingSecWebSocketKey","qualname":"::error::ProtocolError::MissingSecWebSocketKey","value":"ProtocolError::MissingSecWebSocketKey","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Key` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Key` HTTP header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19948,"byte_end":19992,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"error(\"No \\\"Sec-WebSocket-Key\\\" header\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19997,"byte_end":20040,"line_start":159,"line_end":159,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20244,"byte_end":20273,"line_start":163,"line_end":163,"column_start":5,"column_end":34},"name":"SecWebSocketAcceptKeyMismatch","qualname":"::error::ProtocolError::SecWebSocketAcceptKeyMismatch","value":"ProtocolError::SecWebSocketAcceptKeyMismatch","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n","sig":null,"attributes":[{"value":"/ The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20073,"byte_end":20175,"line_start":161,"line_end":161,"column_start":5,"column_end":107}},{"value":"error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20180,"byte_end":20239,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20376,"byte_end":20392,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"JunkAfterRequest","qualname":"::error::ProtocolError::JunkAfterRequest","value":"ProtocolError::JunkAfterRequest","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Garbage data encountered after client request.\n","sig":null,"attributes":[{"value":"/ Garbage data encountered after client request.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20279,"byte_end":20329,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"error(\"Junk after client request\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20334,"byte_end":20371,"line_start":165,"line_end":165,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1426},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20500,"byte_end":20524,"line_start":169,"line_end":169,"column_start":5,"column_end":29},"name":"CustomResponseSuccessful","qualname":"::error::ProtocolError::CustomResponseSuccessful","value":"ProtocolError::CustomResponseSuccessful","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Custom responses must be unsuccessful.\n","sig":null,"attributes":[{"value":"/ Custom responses must be unsuccessful.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20398,"byte_end":20440,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"error(\"Custom response must not be successful\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20445,"byte_end":20495,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1428},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20721,"byte_end":20734,"line_start":172,"line_end":172,"column_start":5,"column_end":18},"name":"InvalidHeader","qualname":"::error::ProtocolError::InvalidHeader","value":"ProtocolError::InvalidHeader(HeaderName)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Invalid header is passed. Or the header is missing in the request. Or not present at all. Check the request that you pass.\n","sig":null,"attributes":[{"value":"/ Invalid header is passed. Or the header is missing in the request. Or not present at all. Check the request that you pass.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20530,"byte_end":20656,"line_start":170,"line_end":170,"column_start":5,"column_end":131}},{"value":"error(\"Missing, duplicated or incorrect header {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20661,"byte_end":20716,"line_start":171,"line_end":171,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20846,"byte_end":20865,"line_start":175,"line_end":175,"column_start":5,"column_end":24},"name":"HandshakeIncomplete","qualname":"::error::ProtocolError::HandshakeIncomplete","value":"ProtocolError::HandshakeIncomplete","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" No more data while still performing handshake.\n","sig":null,"attributes":[{"value":"/ No more data while still performing handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20752,"byte_end":20802,"line_start":173,"line_end":173,"column_start":5,"column_end":55}},{"value":"error(\"Handshake not finished\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20807,"byte_end":20841,"line_start":174,"line_end":174,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20959,"byte_end":20972,"line_start":178,"line_end":178,"column_start":5,"column_end":18},"name":"HttparseError","qualname":"::error::ProtocolError::HttparseError","value":"ProtocolError::HttparseError(httparse::Error)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Wrapper around a [`httparse::Error`] value.\n","sig":null,"attributes":[{"value":"/ Wrapper around a [`httparse::Error`] value.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20871,"byte_end":20918,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"error(\"httparse error: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":20923,"byte_end":20954,"line_start":177,"line_end":177,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1436},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21119,"byte_end":21135,"line_start":181,"line_end":181,"column_start":5,"column_end":21},"name":"SendAfterClosing","qualname":"::error::ProtocolError::SendAfterClosing","value":"ProtocolError::SendAfterClosing","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Not allowed to send after having sent a closing frame.\n","sig":null,"attributes":[{"value":"/ Not allowed to send after having sent a closing frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21003,"byte_end":21061,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"error(\"Sending after closing is not allowed\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21066,"byte_end":21114,"line_start":180,"line_end":180,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21245,"byte_end":21265,"line_start":184,"line_end":184,"column_start":5,"column_end":25},"name":"ReceivedAfterClosing","qualname":"::error::ProtocolError::ReceivedAfterClosing","value":"ProtocolError::ReceivedAfterClosing","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Remote sent data after sending a closing frame.\n","sig":null,"attributes":[{"value":"/ Remote sent data after sending a closing frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21141,"byte_end":21192,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"error(\"Remote sent after having closed\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21197,"byte_end":21240,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21366,"byte_end":21385,"line_start":187,"line_end":187,"column_start":5,"column_end":24},"name":"NonZeroReservedBits","qualname":"::error::ProtocolError::NonZeroReservedBits","value":"ProtocolError::NonZeroReservedBits","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Reserved bits in frame header are non-zero.\n","sig":null,"attributes":[{"value":"/ Reserved bits in frame header are non-zero.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21271,"byte_end":21318,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"error(\"Reserved bits are non-zero\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21323,"byte_end":21361,"line_start":186,"line_end":186,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1442},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21527,"byte_end":21550,"line_start":190,"line_end":190,"column_start":5,"column_end":28},"name":"UnmaskedFrameFromClient","qualname":"::error::ProtocolError::UnmaskedFrameFromClient","value":"ProtocolError::UnmaskedFrameFromClient","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The server must close the connection when an unmasked frame is received.\n","sig":null,"attributes":[{"value":"/ The server must close the connection when an unmasked frame is received.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21391,"byte_end":21467,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"error(\"Received an unmasked frame from client\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21472,"byte_end":21522,"line_start":189,"line_end":189,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1444},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21686,"byte_end":21707,"line_start":193,"line_end":193,"column_start":5,"column_end":26},"name":"MaskedFrameFromServer","qualname":"::error::ProtocolError::MaskedFrameFromServer","value":"ProtocolError::MaskedFrameFromServer","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The client must close the connection when a masked frame is received.\n","sig":null,"attributes":[{"value":"/ The client must close the connection when a masked frame is received.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21556,"byte_end":21629,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"error(\"Received a masked frame from server\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21634,"byte_end":21681,"line_start":192,"line_end":192,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21801,"byte_end":21823,"line_start":196,"line_end":196,"column_start":5,"column_end":27},"name":"FragmentedControlFrame","qualname":"::error::ProtocolError::FragmentedControlFrame","value":"ProtocolError::FragmentedControlFrame","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Control frames must not be fragmented.\n","sig":null,"attributes":[{"value":"/ Control frames must not be fragmented.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21713,"byte_end":21755,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"error(\"Fragmented control frame\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21760,"byte_end":21796,"line_start":195,"line_end":195,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1448},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21968,"byte_end":21986,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"ControlFrameTooBig","qualname":"::error::ProtocolError::ControlFrameTooBig","value":"ProtocolError::ControlFrameTooBig","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Control frames must have a payload of 125 bytes or less.\n","sig":null,"attributes":[{"value":"/ Control frames must have a payload of 125 bytes or less.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21829,"byte_end":21889,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"error(\"Control frame too big (payload must be 125 bytes or less)\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21894,"byte_end":21963,"line_start":198,"line_end":198,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1450},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22086,"byte_end":22109,"line_start":202,"line_end":202,"column_start":5,"column_end":28},"name":"UnknownControlFrameType","qualname":"::error::ProtocolError::UnknownControlFrameType","value":"ProtocolError::UnknownControlFrameType(u8)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Type of control frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of control frame not recognised.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":21992,"byte_end":22033,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"error(\"Unknown control frame type: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22038,"byte_end":22081,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22207,"byte_end":22227,"line_start":205,"line_end":205,"column_start":5,"column_end":25},"name":"UnknownDataFrameType","qualname":"::error::ProtocolError::UnknownDataFrameType","value":"ProtocolError::UnknownDataFrameType(u8)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Type of data frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of data frame not recognised.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22119,"byte_end":22157,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"error(\"Unknown data frame type: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22162,"byte_end":22202,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22367,"byte_end":22390,"line_start":208,"line_end":208,"column_start":5,"column_end":28},"name":"UnexpectedContinueFrame","qualname":"::error::ProtocolError::UnexpectedContinueFrame","value":"ProtocolError::UnexpectedContinueFrame","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Received a continue frame despite there being nothing to continue.\n","sig":null,"attributes":[{"value":"/ Received a continue frame despite there being nothing to continue.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22237,"byte_end":22307,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"error(\"Continue frame but nothing to continue\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22312,"byte_end":22362,"line_start":207,"line_end":207,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22515,"byte_end":22531,"line_start":211,"line_end":211,"column_start":5,"column_end":21},"name":"ExpectedFragment","qualname":"::error::ProtocolError::ExpectedFragment","value":"ProtocolError::ExpectedFragment(Data)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Received data while waiting for more fragments.\n","sig":null,"attributes":[{"value":"/ Received data while waiting for more fragments.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22396,"byte_end":22447,"line_start":209,"line_end":209,"column_start":5,"column_end":56}},{"value":"error(\"While waiting for more fragments received: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22452,"byte_end":22510,"line_start":210,"line_end":210,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22670,"byte_end":22698,"line_start":214,"line_end":214,"column_start":5,"column_end":33},"name":"ResetWithoutClosingHandshake","qualname":"::error::ProtocolError::ResetWithoutClosingHandshake","value":"ProtocolError::ResetWithoutClosingHandshake","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Connection closed without performing the closing handshake.\n","sig":null,"attributes":[{"value":"/ Connection closed without performing the closing handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22543,"byte_end":22606,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"error(\"Connection reset without closing handshake\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22611,"byte_end":22665,"line_start":213,"line_end":213,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22791,"byte_end":22804,"line_start":217,"line_end":217,"column_start":5,"column_end":18},"name":"InvalidOpcode","qualname":"::error::ProtocolError::InvalidOpcode","value":"ProtocolError::InvalidOpcode(u8)","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Encountered an invalid opcode.\n","sig":null,"attributes":[{"value":"/ Encountered an invalid opcode.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22704,"byte_end":22738,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"error(\"Encountered invalid opcode: {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22743,"byte_end":22786,"line_start":216,"line_end":216,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22907,"byte_end":22927,"line_start":220,"line_end":220,"column_start":5,"column_end":25},"name":"InvalidCloseSequence","qualname":"::error::ProtocolError::InvalidCloseSequence","value":"ProtocolError::InvalidCloseSequence","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The payload for the closing frame is invalid.\n","sig":null,"attributes":[{"value":"/ The payload for the closing frame is invalid.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22814,"byte_end":22863,"line_start":218,"line_end":218,"column_start":5,"column_end":54}},{"value":"error(\"Invalid close sequence\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22868,"byte_end":22902,"line_start":219,"line_end":219,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1382},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19161,"byte_end":19174,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::error::ProtocolError","value":"pub enum ProtocolError {\n    WrongHttpMethod,\n    WrongHttpVersion,\n    MissingConnectionUpgradeHeader,\n    MissingUpgradeWebSocketHeader,\n    MissingSecWebSocketVersionHeader,\n    MissingSecWebSocketKey,\n    SecWebSocketAcceptKeyMismatch,\n    JunkAfterRequest,\n    CustomResponseSuccessful,\n    InvalidHeader(HeaderName),\n    HandshakeIncomplete,\n    HttparseError(httparse::Error),\n    SendAfterClosing,\n    ReceivedAfterClosing,\n    NonZeroReservedBits,\n    UnmaskedFrameFromClient,\n    MaskedFrameFromServer,\n    FragmentedControlFrame,\n    ControlFrameTooBig,\n    UnknownControlFrameType(u8),\n    UnknownDataFrameType(u8),\n    UnexpectedContinueFrame,\n    ExpectedFragment(Data),\n    ResetWithoutClosingHandshake,\n    InvalidOpcode(u8),\n    InvalidCloseSequence,\n}","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1466}],"decl_id":null,"docs":" Indicates the specific type/cause of a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a protocol error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":19047,"byte_end":19105,"line_start":140,"line_end":140,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1488},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23168,"byte_end":23188,"line_start":228,"line_end":228,"column_start":5,"column_end":25},"name":"TlsFeatureNotEnabled","qualname":"::error::UrlError::TlsFeatureNotEnabled","value":"UrlError::TlsFeatureNotEnabled","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" TLS is used despite not being compiled with the TLS feature enabled.\n","sig":null,"attributes":[{"value":"/ TLS is used despite not being compiled with the TLS feature enabled.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23047,"byte_end":23119,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"error(\"TLS support not compiled in\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23124,"byte_end":23163,"line_start":227,"line_end":227,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23280,"byte_end":23290,"line_start":231,"line_end":231,"column_start":5,"column_end":15},"name":"NoHostName","qualname":"::error::UrlError::NoHostName","value":"UrlError::NoHostName","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" The URL does not include a host name.\n","sig":null,"attributes":[{"value":"/ The URL does not include a host name.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23194,"byte_end":23235,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"error(\"No host name in the URL\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23240,"byte_end":23275,"line_start":230,"line_end":230,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1492},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23378,"byte_end":23393,"line_start":234,"line_end":234,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::error::UrlError::UnableToConnect","value":"UrlError::UnableToConnect(String)","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" Failed to connect with this URL.\n","sig":null,"attributes":[{"value":"/ Failed to connect with this URL.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23296,"byte_end":23332,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"error(\"Unable to connect to {0}\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23337,"byte_end":23373,"line_start":233,"line_end":233,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23524,"byte_end":23544,"line_start":237,"line_end":237,"column_start":5,"column_end":25},"name":"UnsupportedUrlScheme","qualname":"::error::UrlError::UnsupportedUrlScheme","value":"UrlError::UnsupportedUrlScheme","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n","sig":null,"attributes":[{"value":"/ Unsupported URL scheme used (only `ws://` or `wss://` may be used).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23407,"byte_end":23478,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"error(\"URL scheme not supported\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23483,"byte_end":23519,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1497},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23649,"byte_end":23662,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"EmptyHostName","qualname":"::error::UrlError::EmptyHostName","value":"UrlError::EmptyHostName","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" The URL host name, though included, is empty.\n","sig":null,"attributes":[{"value":"/ The URL host name, though included, is empty.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23550,"byte_end":23599,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"error(\"URL contains empty host name\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23604,"byte_end":23644,"line_start":239,"line_end":239,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23752,"byte_end":23765,"line_start":243,"line_end":243,"column_start":5,"column_end":18},"name":"NoPathOrQuery","qualname":"::error::UrlError::NoPathOrQuery","value":"UrlError::NoPathOrQuery","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":" The URL does not include a path/query.\n","sig":null,"attributes":[{"value":"/ The URL does not include a path/query.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23668,"byte_end":23710,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"error(\"No path/query in URL\")","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23715,"byte_end":23747,"line_start":242,"line_end":242,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1468},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23032,"byte_end":23040,"line_start":225,"line_end":225,"column_start":10,"column_end":18},"name":"UrlError","qualname":"::error::UrlError","value":"pub enum UrlError {\n    TlsFeatureNotEnabled,\n    NoHostName,\n    UnableToConnect(String),\n    UnsupportedUrlScheme,\n    EmptyHostName,\n    NoPathOrQuery,\n}","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499}],"decl_id":null,"docs":" Indicates the specific type/cause of URL error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of URL error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":22932,"byte_end":22983,"line_start":223,"line_end":223,"column_start":1,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1501},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":24070,"byte_end":24078,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"name":"TlsError","qualname":"::error::TlsError","value":"pub enum TlsError { }","parent":null,"children":[],"decl_id":null,"docs":" TLS errors.","sig":null,"attributes":[{"value":"/ TLS errors.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23770,"byte_end":23785,"line_start":246,"line_end":246,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23786,"byte_end":23789,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ Note that even if you enable only the rustls-based TLS support, the error at runtime could still","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23790,"byte_end":23890,"line_start":248,"line_end":248,"column_start":1,"column_end":101}},{"value":"/ be `Native`, as another crate in the dependency graph may enable native TLS support.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23891,"byte_end":23979,"line_start":249,"line_end":249,"column_start":1,"column_end":89}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":23980,"byte_end":24018,"line_start":250,"line_end":250,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":24043,"byte_end":24060,"line_start":252,"line_end":252,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":214},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handshake","qualname":"::handshake","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":337},{"krate":0,"index":368},{"krate":0,"index":501},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":1583},{"krate":0,"index":1587},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":1590},{"krate":0,"index":1599},{"krate":0,"index":612}],"decl_id":null,"docs":" WebSocket handshake control.\n","sig":null,"attributes":[{"value":"/ WebSocket handshake control.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24609,"byte_end":24641,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::handshake::client","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":1507},{"krate":0,"index":1512},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":335}],"decl_id":null,"docs":" Client handshake machine.\n","sig":null,"attributes":[{"value":"/ Client handshake machine.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":28699,"byte_end":28728,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29282,"byte_end":29289,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::client::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Client request type.\n","sig":null,"attributes":[{"value":"/ Client request type.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29248,"byte_end":29272,"line_start":25,"line_end":25,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29345,"byte_end":29353,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::client::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Client response type.\n","sig":null,"attributes":[{"value":"/ Client response type.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29310,"byte_end":29335,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1507},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29430,"byte_end":29445,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"ClientHandshake","qualname":"::handshake::client::ClientHandshake","value":"ClientHandshake {  }","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511}],"decl_id":null,"docs":" Client handshake role.\n","sig":null,"attributes":[{"value":"/ Client handshake role.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29375,"byte_end":29401,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29640,"byte_end":29645,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"start","qualname":"<ClientHandshake<S>>::start","value":"pub fn start(S, Request, Option<WebSocketConfig>)\n-> Result<MidHandshake<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a client handshake.\n","sig":null,"attributes":[{"value":"/ Initiate a client handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29596,"byte_end":29628,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":39127,"byte_end":39139,"line_start":262,"line_end":262,"column_start":8,"column_end":20},"name":"generate_key","qualname":"::handshake::client::generate_key","value":"pub fn generate_key() -> String","parent":null,"children":[],"decl_id":null,"docs":" Generate a random key for the `Sec-WebSocket-Key` header.\n","sig":null,"attributes":[{"value":"/ Generate a random key for the `Sec-WebSocket-Key` header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":39058,"byte_end":39119,"line_start":261,"line_end":261,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::handshake::headers","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":365}],"decl_id":null,"docs":" HTTP Request and response header handling.\n","sig":null,"attributes":[{"value":"/ HTTP Request and response header handling.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":41703,"byte_end":41749,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":41939,"byte_end":41950,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"MAX_HEADERS","qualname":"::handshake::headers::MAX_HEADERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Limit for the number of header lines.\n","sig":null,"attributes":[{"value":"/ Limit for the number of header lines.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":41887,"byte_end":41928,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::handshake::server","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":488},{"krate":0,"index":1526},{"krate":0,"index":1533},{"krate":0,"index":490},{"krate":0,"index":494}],"decl_id":null,"docs":" Server handshake machine.\n","sig":null,"attributes":[{"value":"/ Server handshake machine.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":44375,"byte_end":44404,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":44986,"byte_end":44993,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::server::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Server request type.\n","sig":null,"attributes":[{"value":"/ Server request type.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":44952,"byte_end":44976,"line_start":26,"line_end":26,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":458},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":45049,"byte_end":45057,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::server::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Server response type.\n","sig":null,"attributes":[{"value":"/ Server response type.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":45014,"byte_end":45039,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":459},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":45120,"byte_end":45133,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ErrorResponse","qualname":"::handshake::server::ErrorResponse","value":"HttpResponse<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Server error response type.\n","sig":null,"attributes":[{"value":"/ Server error response type.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":45079,"byte_end":45110,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":469},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":46759,"byte_end":46774,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"create_response","qualname":"::handshake::server::create_response","value":"pub fn create_response(&Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request.\n","sig":null,"attributes":[{"value":"/ Create a response for the request.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":46713,"byte_end":46751,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":46925,"byte_end":46950,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"create_response_with_body","qualname":"::handshake::server::create_response_with_body","value":"pub fn create_response_with_body<T, impl FnOnce() -> T: FnOnce() ->\n                                 T>(&HttpRequest<T>, impl FnOnce() -> T)\n-> Result<HttpResponse<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request with a custom body.\n","sig":null,"attributes":[{"value":"/ Create a response for the request with a custom body.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":46860,"byte_end":46917,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":483},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49228,"byte_end":49236,"line_start":155,"line_end":155,"column_start":11,"column_end":19},"name":"Callback","qualname":"::handshake::server::Callback","value":"Callback: Sized","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" The callback trait.","sig":null,"attributes":[{"value":"/ The callback trait.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":48873,"byte_end":48896,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":48897,"byte_end":48900,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The callback is called when the server receives an incoming WebSocket","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":48901,"byte_end":48974,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ handshake request from the client. Specifying a callback allows you to analyze incoming headers","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":48975,"byte_end":49074,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ and add additional headers to the response that server sends to the client and/or reject the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49075,"byte_end":49171,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ connection based on the incoming headers.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49172,"byte_end":49217,"line_start":154,"line_end":154,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49470,"byte_end":49480,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handshake::server::Callback::on_request","value":"pub fn on_request(Self, &Request, Response)\n-> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":" Called whenever the server read the request from the client and is ready to reply to it.\n May return additional reply headers.\n Returning an error resulting in rejecting the incoming connection.\n","sig":null,"attributes":[{"value":"/ Called whenever the server read the request from the client and is ready to reply to it.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49250,"byte_end":49342,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ May return additional reply headers.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49347,"byte_end":49387,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ Returning an error resulting in rejecting the incoming connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49392,"byte_end":49462,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1519},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49960,"byte_end":49970,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"NoCallback","qualname":"::handshake::server::NoCallback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stub for callback that does nothing.\n","sig":null,"attributes":[{"value":"/ Stub for callback that does nothing.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49878,"byte_end":49918,"line_start":179,"line_end":179,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50263,"byte_end":50278,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ServerHandshake","qualname":"::handshake::server::ServerHandshake","value":"ServerHandshake {  }","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":" Server handshake role.\n","sig":null,"attributes":[{"value":"/ Server handshake role.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50169,"byte_end":50195,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50196,"byte_end":50234,"line_start":194,"line_end":194,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":51235,"byte_end":51240,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"start","qualname":"<ServerHandshake<S, C>>::start","value":"pub fn start(S, C, Option<WebSocketConfig>) -> MidHandshake<Self>","parent":null,"children":[],"decl_id":null,"docs":" Start server handshake. `callback` specifies a custom callback which the user can pass to\n the handshake, this callback will be called when the a websocket client connnects to the\n server, you can specify the callback if you want to add additional header to the client\n upon join based on the incoming headers.\n","sig":null,"attributes":[{"value":"/ Start server handshake. `callback` specifies a custom callback which the user can pass to","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50888,"byte_end":50981,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ the handshake, this callback will be called when the a websocket client connnects to the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50986,"byte_end":51078,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ server, you can specify the callback if you want to add additional header to the client","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":51083,"byte_end":51174,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ upon join based on the incoming headers.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":51179,"byte_end":51223,"line_start":213,"line_end":213,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1537},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55403,"byte_end":55419,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"HandshakeMachine","qualname":"::handshake::machine::HandshakeMachine","value":"HandshakeMachine {  }","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"decl_id":null,"docs":" A generic handshake state machine.\n","sig":null,"attributes":[{"value":"/ A generic handshake state machine.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55336,"byte_end":55374,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55573,"byte_end":55583,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"start_read","qualname":"<HandshakeMachine<Stream>>::start_read","value":"pub fn start_read(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start reading data from the peer.\n","sig":null,"attributes":[{"value":"/ Start reading data from the peer.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55524,"byte_end":55561,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55754,"byte_end":55765,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"start_write","qualname":"<HandshakeMachine<Stream>>::start_write","value":"pub fn start_write<D: Into<Vec<u8>>>(Stream, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start writing data to the peer.\n","sig":null,"attributes":[{"value":"/ Start writing data to the peer.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55707,"byte_end":55742,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55986,"byte_end":55993,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<HandshakeMachine<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55923,"byte_end":55974,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56109,"byte_end":56116,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HandshakeMachine<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56045,"byte_end":56097,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56286,"byte_end":56298,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"single_round","qualname":"<HandshakeMachine<Stream>>::single_round","value":"pub fn single_round<Obj: TryParse>(Self) -> Result<RoundResult<Obj, Stream>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a single handshake round.\n","sig":null,"attributes":[{"value":"/ Perform a single handshake round.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56237,"byte_end":56274,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1547},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58555,"byte_end":58565,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::handshake::machine::RoundResult::WouldBlock","value":"RoundResult::WouldBlock(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":" Round not done, I/O would block.\n","sig":null,"attributes":[{"value":"/ Round not done, I/O would block.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58514,"byte_end":58550,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58634,"byte_end":58644,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::handshake::machine::RoundResult::Incomplete","value":"RoundResult::Incomplete(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":" Round done, state unchanged.\n","sig":null,"attributes":[{"value":"/ Round done, state unchanged.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58597,"byte_end":58629,"line_start":94,"line_end":94,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58700,"byte_end":58713,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"StageFinished","qualname":"::handshake::machine::RoundResult::StageFinished","value":"RoundResult::StageFinished(StageResult<Obj, Stream>)","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":" Stage complete.\n","sig":null,"attributes":[{"value":"/ Stage complete.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58676,"byte_end":58695,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1544},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58483,"byte_end":58494,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"name":"RoundResult","qualname":"::handshake::machine::RoundResult","value":"pub enum RoundResult<Obj, Stream> {\n    WouldBlock(HandshakeMachine<Stream>),\n    Incomplete(HandshakeMachine<Stream>),\n    StageFinished(StageResult<Obj, Stream>),\n}","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553}],"decl_id":null,"docs":" The result of the round.\n","sig":null,"attributes":[{"value":"/ The result of the round.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58428,"byte_end":58456,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58862,"byte_end":58873,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"DoneReading","qualname":"::handshake::machine::StageResult::DoneReading","value":"StageResult::DoneReading { result, stream, tail }","parent":{"krate":0,"index":1560},"children":[],"decl_id":null,"docs":" Reading round finished.\n","sig":null,"attributes":[{"value":"/ Reading round finished.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58830,"byte_end":58857,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1567},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58958,"byte_end":58969,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"DoneWriting","qualname":"::handshake::machine::StageResult::DoneWriting","value":"StageResult::DoneWriting(Stream)","parent":{"krate":0,"index":1560},"children":[],"decl_id":null,"docs":" Writing round finished.\n","sig":null,"attributes":[{"value":"/ Writing round finished.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58926,"byte_end":58953,"line_start":105,"line_end":105,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1560},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58799,"byte_end":58810,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"name":"StageResult","qualname":"::handshake::machine::StageResult","value":"pub enum StageResult<Obj, Stream> {\n    DoneReading {\n        result: Obj,\n        stream: Stream,\n        tail: Vec<u8>,\n    },\n    DoneWriting(Stream),\n}","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1567}],"decl_id":null,"docs":" The result of the stage.\n","sig":null,"attributes":[{"value":"/ The result of the stage.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58744,"byte_end":58772,"line_start":100,"line_end":100,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":59018,"byte_end":59026,"line_start":110,"line_end":110,"column_start":11,"column_end":19},"name":"TryParse","qualname":"::handshake::machine::TryParse","value":"TryParse: Sized","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":" The parseable object.\n","sig":null,"attributes":[{"value":"/ The parseable object.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":58982,"byte_end":59007,"line_start":109,"line_end":109,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":59103,"byte_end":59112,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"try_parse","qualname":"::handshake::machine::TryParse::try_parse","value":"pub fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Return Ok(None) if incomplete, Err on syntax error.\n","sig":null,"attributes":[{"value":"/ Return Ok(None) if incomplete, Err on syntax error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":59040,"byte_end":59095,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24969,"byte_end":24981,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"MidHandshake","qualname":"::handshake::MidHandshake","value":"MidHandshake {  }","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"decl_id":null,"docs":" A WebSocket handshake.\n","sig":null,"attributes":[{"value":"/ A WebSocket handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24914,"byte_end":24940,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25167,"byte_end":25174,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshake<Role>>::get_ref","value":"pub fn get_ref(&Self) -> &HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to machine\n","sig":null,"attributes":[{"value":"/ Allow access to machine","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25128,"byte_end":25155,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25307,"byte_end":25314,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshake<Role>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow mutable access to machine\n","sig":null,"attributes":[{"value":"/ Allow mutable access to machine","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25260,"byte_end":25295,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25459,"byte_end":25468,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshake<Role>>::handshake","value":"pub fn handshake(Self) -> Result<Role::FinalResult, HandshakeError<Role>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25412,"byte_end":25447,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26235,"byte_end":26246,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::handshake::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshake<Role>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake was interrupted (would block).\n","sig":null,"attributes":[{"value":"/ Handshake was interrupted (would block).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26186,"byte_end":26230,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26298,"byte_end":26305,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Failure","qualname":"::handshake::HandshakeError::Failure","value":"HandshakeError::Failure(Error)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake failed.\n","sig":null,"attributes":[{"value":"/ Handshake failed.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26272,"byte_end":26293,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":588},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26144,"byte_end":26158,"line_start":57,"line_end":57,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::handshake::HandshakeError","value":"pub enum HandshakeError<Role: HandshakeRole> {\n    Interrupted(MidHandshake<Role>),\n    Failure(Error),\n}","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":593}],"decl_id":null,"docs":" A handshake result.\n","sig":null,"attributes":[{"value":"/ A handshake result.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26111,"byte_end":26134,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":607},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27235,"byte_end":27248,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"HandshakeRole","qualname":"::handshake::HandshakeRole","value":"HandshakeRole","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Handshake role.\n","sig":null,"attributes":[{"value":"/ Handshake role.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27205,"byte_end":27224,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27279,"byte_end":27291,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"IncomingData","qualname":"::handshake::HandshakeRole::IncomingData","value":"type IncomingData: TryParse;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":609},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27331,"byte_end":27345,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"InternalStream","qualname":"::handshake::HandshakeRole::InternalStream","value":"type InternalStream: Read + Write;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":610},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27389,"byte_end":27400,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"name":"FinalResult","qualname":"::handshake::HandshakeRole::FinalResult","value":"type FinalResult;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27428,"byte_end":27442,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"::handshake::HandshakeRole::stage_finished","value":"pub fn stage_finished(&mut Self,\n                      StageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>, Error>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1593},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27734,"byte_end":27742,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Continue","qualname":"::handshake::ProcessingResult::Continue","value":"ProcessingResult::Continue(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1596},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27774,"byte_end":27778,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Done","qualname":"::handshake::ProcessingResult::Done","value":"ProcessingResult::Done(FinalResult)","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1590},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27690,"byte_end":27706,"line_start":108,"line_end":108,"column_start":10,"column_end":26},"name":"ProcessingResult","qualname":"::handshake::ProcessingResult","value":"pub enum ProcessingResult<Stream, FinalResult> {\n    Continue(HandshakeMachine<Stream>),\n    Done(FinalResult),\n}","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1596}],"decl_id":null,"docs":" Stage processing result.\n","sig":null,"attributes":[{"value":"/ Stage processing result.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27620,"byte_end":27648,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":28073,"byte_end":28090,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"derive_accept_key","qualname":"::handshake::derive_accept_key","value":"pub fn derive_accept_key(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","sig":null,"attributes":[{"value":"/ Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27796,"byte_end":27892,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27893,"byte_end":27896,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function can be used to perform a handshake before passing a raw TCP stream to","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27897,"byte_end":27984,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ [`WebSocket::from_raw_socket`][crate::protocol::WebSocket::from_raw_socket].","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27985,"byte_end":28065,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":614},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocol","qualname":"::protocol","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":902},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1836},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1075},{"krate":0,"index":1862},{"krate":0,"index":1866},{"krate":0,"index":1077},{"krate":0,"index":1088},{"krate":0,"index":1869},{"krate":0,"index":1877},{"krate":0,"index":1094},{"krate":0,"index":1879},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1123}],"decl_id":null,"docs":" Generic WebSocket message stream.\n","sig":null,"attributes":[{"value":"/ Generic WebSocket message stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59355,"byte_end":59392,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":615},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::protocol::frame","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":694},{"krate":0,"index":832},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":1775},{"krate":0,"index":1779},{"krate":0,"index":879},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":1782},{"krate":0,"index":1786},{"krate":0,"index":893}],"decl_id":null,"docs":" Utilities to work with raw WebSocket frames.\n","sig":null,"attributes":[{"value":"/ Utilities to work with raw WebSocket frames.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89274,"byte_end":89322,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":616},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coding","qualname":"::protocol::frame::coding","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":1603},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":658},{"krate":0,"index":682},{"krate":0,"index":1666},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692}],"decl_id":null,"docs":" Various codes defined in RFC 6455.\n","sig":null,"attributes":[{"value":"/ Various codes defined in RFC 6455.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97597,"byte_end":97635,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1604},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97831,"byte_end":97835,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Data","qualname":"::protocol::frame::coding::OpCode::Data","value":"OpCode::Data(Data)","parent":{"krate":0,"index":1603},"children":[],"decl_id":null,"docs":" Data (text or binary).\n","sig":null,"attributes":[{"value":"/ Data (text or binary).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97800,"byte_end":97826,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1607},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97892,"byte_end":97899,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Control","qualname":"::protocol::frame::coding::OpCode::Control","value":"OpCode::Control(Control)","parent":{"krate":0,"index":1603},"children":[],"decl_id":null,"docs":" Control message (close, ping, pong).\n","sig":null,"attributes":[{"value":"/ Control message (close, ping, pong).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97847,"byte_end":97887,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1603},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97787,"byte_end":97793,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::frame::coding::OpCode","value":"pub enum OpCode { Data(Data), Control(Control), }","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1607}],"decl_id":null,"docs":" WebSocket message opcode as in RFC 6455.\n","sig":null,"attributes":[{"value":"/ WebSocket message opcode as in RFC 6455.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97688,"byte_end":97732,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98051,"byte_end":98059,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::frame::coding::Data::Continue","value":"Data::Continue","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":" 0x0 denotes a continuation frame\n","sig":null,"attributes":[{"value":"/ 0x0 denotes a continuation frame","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98010,"byte_end":98046,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1625},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98098,"byte_end":98102,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::frame::coding::Data::Text","value":"Data::Text","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":" 0x1 denotes a text frame\n","sig":null,"attributes":[{"value":"/ 0x1 denotes a text frame","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98065,"byte_end":98093,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1627},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98143,"byte_end":98149,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::frame::coding::Data::Binary","value":"Data::Binary","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":" 0x2 denotes a binary frame\n","sig":null,"attributes":[{"value":"/ 0x2 denotes a binary frame","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98108,"byte_end":98138,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98213,"byte_end":98221,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Data::Reserved","value":"Data::Reserved(u8)","parent":{"krate":0,"index":1622},"children":[],"decl_id":null,"docs":" 0x3-7 are reserved for further non-control frames\n","sig":null,"attributes":[{"value":"/ 0x3-7 are reserved for further non-control frames","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98155,"byte_end":98208,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1622},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97999,"byte_end":98003,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Data","qualname":"::protocol::frame::coding::Data","value":"pub enum Data { Continue, Text, Binary, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1629}],"decl_id":null,"docs":" Data opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Data opcodes as in RFC 6455","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":97913,"byte_end":97944,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98372,"byte_end":98377,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::frame::coding::Control::Close","value":"Control::Close","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":" 0x8 denotes a connection close\n","sig":null,"attributes":[{"value":"/ 0x8 denotes a connection close","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98333,"byte_end":98367,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98410,"byte_end":98414,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::frame::coding::Control::Ping","value":"Control::Ping","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":" 0x9 denotes a ping\n","sig":null,"attributes":[{"value":"/ 0x9 denotes a ping","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98383,"byte_end":98405,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98447,"byte_end":98451,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::frame::coding::Control::Pong","value":"Control::Pong","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":" 0xa denotes a pong\n","sig":null,"attributes":[{"value":"/ 0xa denotes a pong","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98420,"byte_end":98442,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1651},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98511,"byte_end":98519,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Control::Reserved","value":"Control::Reserved(u8)","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":" 0xb-f are reserved for further control frames\n","sig":null,"attributes":[{"value":"/ 0xb-f are reserved for further control frames","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98457,"byte_end":98506,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1644},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98319,"byte_end":98326,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Control","qualname":"::protocol::frame::coding::Control","value":"pub enum Control { Close, Ping, Pong, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651}],"decl_id":null,"docs":" Control opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Control opcodes as in RFC 6455","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98230,"byte_end":98264,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100890,"byte_end":100896,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::frame::coding::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[{"value":"/ Indicates a normal closure, meaning that the purpose for","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100760,"byte_end":100820,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ which the connection was established has been fulfilled.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100825,"byte_end":100885,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1669},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101038,"byte_end":101042,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::frame::coding::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is \"going away\", such as a server","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100902,"byte_end":100966,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ going down or a browser having navigated away from a page.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100971,"byte_end":101033,"line_start":124,"line_end":124,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1671},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101146,"byte_end":101154,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::frame::coding::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection due","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101048,"byte_end":101112,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ to a protocol error.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101117,"byte_end":101141,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101404,"byte_end":101415,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::frame::coding::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101160,"byte_end":101220,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/ because it has received a type of data it cannot accept (e.g., an","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101225,"byte_end":101294,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ endpoint that understands only text data MAY send this if it","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101299,"byte_end":101363,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ receives a binary message).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101368,"byte_end":101399,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1675},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101632,"byte_end":101638,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::frame::coding::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[{"value":"/ Indicates that no status code was included in a closing frame. This","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101421,"byte_end":101492,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ close code makes it possible to use a single method, `on_close` to","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101497,"byte_end":101567,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ handle even cases where no close code was provided.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101572,"byte_end":101627,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1677},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101980,"byte_end":101988,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::frame::coding::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[{"value":"/ Indicates an abnormal closure. If the abnormal closure was due to an","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101644,"byte_end":101716,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ error, this close code will not be used. Instead, the `on_error` method","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101721,"byte_end":101796,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ of the handler will be called with the error. However, if the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101801,"byte_end":101877,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ is simply dropped, without an error, this close code will be sent to the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101882,"byte_end":101958,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ handler.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101963,"byte_end":101975,"line_start":142,"line_end":142,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1679},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102240,"byte_end":102247,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::frame::coding::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n data within a text message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":101994,"byte_end":102054,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/ because it has received data within a message that was not","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102059,"byte_end":102121,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102126,"byte_end":102198,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ data within a text message).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102203,"byte_end":102235,"line_start":147,"line_end":147,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1681},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102604,"byte_end":102610,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::frame::coding::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102253,"byte_end":102313,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that violates its policy.  This","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102318,"byte_end":102387,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ is a generic status code that can be returned when there is no","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102392,"byte_end":102458,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ other more suitable status code (e.g., Unsupported or Size) or if there","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102463,"byte_end":102538,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ is a need to hide specific details about the policy.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102543,"byte_end":102599,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1683},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102766,"byte_end":102770,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::frame::coding::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102616,"byte_end":102676,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that is too big for it to","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102681,"byte_end":102744,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/ process.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102749,"byte_end":102761,"line_start":157,"line_end":157,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1685},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103245,"byte_end":103254,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::frame::coding::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint (client) is terminating the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102776,"byte_end":102834,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ connection because it has expected the server to negotiate one or","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102839,"byte_end":102908,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ more extension, but the server didn't return them in the response","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102913,"byte_end":102982,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ message of the WebSocket handshake.  The list of extensions that","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":102987,"byte_end":103055,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ are needed should be given as the reason for closing.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103060,"byte_end":103117,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ Note that this status code is not used by the server, because it","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103122,"byte_end":103190,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ can fail the WebSocket handshake instead.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103195,"byte_end":103240,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1687},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103432,"byte_end":103437,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::frame::coding::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[{"value":"/ Indicates that a server is terminating the connection because","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103260,"byte_end":103325,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ it encountered an unexpected condition that prevented it from","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103330,"byte_end":103395,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ fulfilling the request.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103400,"byte_end":103427,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1689},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103617,"byte_end":103624,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::frame::coding::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is restarting. A client may choose to reconnect,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103443,"byte_end":103521,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ and if it does, it should use a randomized delay of 5-30 seconds between attempts.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103526,"byte_end":103612,"line_start":172,"line_end":172,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1691},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103845,"byte_end":103850,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::frame::coding::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is overloaded and the client should either connect","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103630,"byte_end":103710,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ to a different IP (when multiple targets exist), or reconnect to the same IP","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103715,"byte_end":103795,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ when a user has performed an action.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103800,"byte_end":103840,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1693},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103875,"byte_end":103878,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::frame::coding::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1695},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103903,"byte_end":103911,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::CloseCode::Reserved","value":"CloseCode::Reserved(u16)","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103941,"byte_end":103945,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Iana","qualname":"::protocol::frame::coding::CloseCode::Iana","value":"CloseCode::Iana(u16)","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1701},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":103975,"byte_end":103982,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"Library","qualname":"::protocol::frame::coding::CloseCode::Library","value":"CloseCode::Library(u16)","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1704},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104012,"byte_end":104015,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::frame::coding::CloseCode::Bad","value":"CloseCode::Bad(u16)","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1666},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100744,"byte_end":100753,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::frame::coding::CloseCode","value":"pub enum CloseCode {\n    Normal,\n    Away,\n    Protocol,\n    Unsupported,\n    Status,\n    Abnormal,\n    Invalid,\n    Policy,\n    Size,\n    Extension,\n    Error,\n    Restart,\n    Again,\n    Tls,\n    Reserved(u16),\n    Iana(u16),\n    Library(u16),\n    Bad(u16),\n}","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"/ Status code used to indicate why an endpoint is closing the WebSocket connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":100604,"byte_end":100689,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104097,"byte_end":104107,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_allowed","qualname":"<CloseCode>::is_allowed","value":"pub fn is_allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this CloseCode is allowed.\n","sig":null,"attributes":[{"value":"/ Check if this CloseCode is allowed.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104046,"byte_end":104085,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1719},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107029,"byte_end":107039,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"CloseFrame","qualname":"::protocol::frame::frame::CloseFrame","value":"CloseFrame { code, reason }","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"decl_id":null,"docs":" A struct representing the close command.\n","sig":null,"attributes":[{"value":"/ A struct representing the close command.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":106934,"byte_end":106978,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1721},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107084,"byte_end":107088,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"code","qualname":"::protocol::frame::frame::CloseFrame::code","value":"protocol::frame::coding::CloseCode","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":" The reason as a code.\n","sig":null,"attributes":[{"value":"/ The reason as a code.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107050,"byte_end":107075,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107144,"byte_end":107150,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"reason","qualname":"::protocol::frame::frame::CloseFrame::reason","value":"std::borrow::Cow<'t, str>","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":" The reason as text string.\n","sig":null,"attributes":[{"value":"/ The reason as text string.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107105,"byte_end":107135,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107243,"byte_end":107253,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<CloseFrame>::into_owned","value":"pub fn into_owned(Self) -> CloseFrame","parent":null,"children":[],"decl_id":null,"docs":" Convert into a owned string.\n","sig":null,"attributes":[{"value":"/ Convert into a owned string.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107199,"byte_end":107231,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107679,"byte_end":107690,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"FrameHeader","qualname":"::protocol::frame::frame::FrameHeader","value":"FrameHeader { is_final, rsv1, rsv2, rsv3, opcode, mask }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"decl_id":null,"docs":" A struct representing a WebSocket frame header.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107538,"byte_end":107589,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107590,"byte_end":107628,"line_start":42,"line_end":42,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107784,"byte_end":107792,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"is_final","qualname":"::protocol::frame::frame::FrameHeader::is_final","value":"bool","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Indicates that the frame is the last one of a possibly fragmented message.\n","sig":null,"attributes":[{"value":"/ Indicates that the frame is the last one of a possibly fragmented message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107697,"byte_end":107775,"line_start":45,"line_end":45,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107850,"byte_end":107854,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"name":"rsv1","qualname":"::protocol::frame::frame::FrameHeader::rsv1","value":"bool","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107804,"byte_end":107841,"line_start":47,"line_end":47,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107912,"byte_end":107916,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"rsv2","qualname":"::protocol::frame::frame::FrameHeader::rsv2","value":"bool","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107866,"byte_end":107903,"line_start":49,"line_end":49,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107974,"byte_end":107978,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"rsv3","qualname":"::protocol::frame::frame::FrameHeader::rsv3","value":"bool","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107928,"byte_end":107965,"line_start":51,"line_end":51,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108029,"byte_end":108035,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"opcode","qualname":"::protocol::frame::frame::FrameHeader::opcode","value":"protocol::frame::coding::OpCode","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" WebSocket protocol opcode.\n","sig":null,"attributes":[{"value":"/ WebSocket protocol opcode.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107990,"byte_end":108020,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108083,"byte_end":108087,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"mask","qualname":"::protocol::frame::frame::FrameHeader::mask","value":"std::option::Option<[u8; 4]>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" A frame mask, if any.\n","sig":null,"attributes":[{"value":"/ A frame mask, if any.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108049,"byte_end":108074,"line_start":55,"line_end":55,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108607,"byte_end":108612,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"parse","qualname":"<FrameHeader>::parse","value":"pub fn parse<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Cursor<impl AsRef<[u8]>>)\n-> Result<Option<(Self, u64)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a header from an input stream.\n Returns `None` if insufficient data and does not consume anything in this case.\n Payload size is returned along with the header.\n","sig":null,"attributes":[{"value":"/ Parse a header from an input stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108411,"byte_end":108451,"line_start":73,"line_end":73,"column_start":5,"column_end":45}},{"value":"/ Returns `None` if insufficient data and does not consume anything in this case.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108456,"byte_end":108539,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"/ Payload size is returned along with the header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108544,"byte_end":108595,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":109050,"byte_end":109053,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameHeader>::len","value":"pub fn len(&Self, u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the header formatted with given payload length.\n","sig":null,"attributes":[{"value":"/ Get the size of the header formatted with given payload length.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108928,"byte_end":108995,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":109000,"byte_end":109038,"line_start":88,"line_end":88,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":109252,"byte_end":109258,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"format","qualname":"<FrameHeader>::format","value":"pub fn format<impl Write: Write>(&Self, u64, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Format a header for given payload size.\n","sig":null,"attributes":[{"value":"/ Format a header for given payload size.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":109197,"byte_end":109240,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112696,"byte_end":112701,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"Frame","qualname":"::protocol::frame::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112601,"byte_end":112645,"line_start":202,"line_end":202,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112899,"byte_end":112902,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"/ Get the length of the frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112771,"byte_end":112803,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ This is the length of the header + the length of the payload.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112808,"byte_end":112873,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112878,"byte_end":112887,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113079,"byte_end":113087,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the frame is empty.\n","sig":null,"attributes":[{"value":"/ Check if the frame is empty.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113021,"byte_end":113053,"line_start":218,"line_end":218,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113058,"byte_end":113067,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113208,"byte_end":113214,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"header","qualname":"<Frame>::header","value":"pub fn header(&Self) -> &FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113140,"byte_end":113182,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113187,"byte_end":113196,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113348,"byte_end":113358,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Frame>::header_mut","value":"pub fn header_mut(&mut Self) -> &mut FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's header.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113272,"byte_end":113322,"line_start":230,"line_end":230,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113327,"byte_end":113336,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113497,"byte_end":113504,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"pub fn payload(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's payload.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113428,"byte_end":113471,"line_start":236,"line_end":236,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113476,"byte_end":113485,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113636,"byte_end":113647,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"pub fn payload_mut(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's payload.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113559,"byte_end":113610,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":113615,"byte_end":113624,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114607,"byte_end":114616,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as binary.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as binary.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114532,"byte_end":114581,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114586,"byte_end":114595,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114743,"byte_end":114754,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Frame>::into_string","value":"pub fn into_string(Self) -> StdResult<String, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as string.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as string.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114668,"byte_end":114717,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114722,"byte_end":114731,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114908,"byte_end":114915,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Frame>::to_text","value":"pub fn to_text(&Self) -> Result<&str, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Get frame payload as `&str`.\n","sig":null,"attributes":[{"value":"/ Get frame payload as `&str`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114850,"byte_end":114882,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":114887,"byte_end":114896,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115657,"byte_end":115664,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"pub fn message(Vec<u8>, OpCode, bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"/ Create a new data frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115603,"byte_end":115631,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115636,"byte_end":115645,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115989,"byte_end":115993,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"pub fn pong(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Pong control frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115927,"byte_end":115963,"line_start":314,"line_end":314,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":115968,"byte_end":115977,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116292,"byte_end":116296,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"pub fn ping(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Ping control frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116230,"byte_end":116266,"line_start":326,"line_end":326,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116271,"byte_end":116280,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116596,"byte_end":116601,"line_start":340,"line_end":340,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"pub fn close(Option<CloseFrame>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Close control frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116533,"byte_end":116570,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":116575,"byte_end":116584,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117105,"byte_end":117117,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"from_payload","qualname":"<Frame>::from_payload","value":"pub fn from_payload(FrameHeader, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a frame from given header and data.\n","sig":null,"attributes":[{"value":"/ Create a frame from given header and data.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117047,"byte_end":117093,"line_start":353,"line_end":353,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117257,"byte_end":117263,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"pub fn format<impl Write: Write>(Self, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[{"value":"/ Write a frame out to a buffer","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117212,"byte_end":117245,"line_start":358,"line_end":358,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1775},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89689,"byte_end":89700,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FrameSocket","qualname":"::protocol::frame::FrameSocket","value":"FrameSocket {  }","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"decl_id":null,"docs":" A reader and writer for WebSocket frames.\n","sig":null,"attributes":[{"value":"/ A reader and writer for WebSocket frames.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89615,"byte_end":89660,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89919,"byte_end":89922,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameSocket<Stream>>::new","value":"pub fn new(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89877,"byte_end":89907,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90084,"byte_end":90103,"line_start":35,"line_end":35,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<FrameSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket from partially read data.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket from partially read data.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90017,"byte_end":90072,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90282,"byte_end":90292,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameSocket<Stream>>::into_inner","value":"pub fn into_inner(Self) -> (Stream, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Extract a stream from the socket.\n","sig":null,"attributes":[{"value":"/ Extract a stream from the socket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90233,"byte_end":90270,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90451,"byte_end":90458,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90388,"byte_end":90439,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90575,"byte_end":90582,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90511,"byte_end":90563,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90749,"byte_end":90759,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"read_frame","qualname":"<FrameSocket<Stream>>::read_frame","value":"pub fn read_frame(&mut Self, Option<usize>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Read a frame from stream.\n","sig":null,"attributes":[{"value":"/ Read a frame from stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90708,"byte_end":90737,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91218,"byte_end":91229,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<FrameSocket<Stream>>::write_frame","value":"pub fn write_frame(&mut Self, Frame) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame to stream.","sig":null,"attributes":[{"value":"/ Write a frame to stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90954,"byte_end":90982,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90987,"byte_end":90990,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the frame is queued regardless of any errors.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90995,"byte_end":91074,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ There is no need to resend the frame. In order to handle WouldBlock or Incomplete,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91079,"byte_end":91165,"line_start":72,"line_end":72,"column_start":5,"column_end":91}},{"value":"/ call write_pending() afterwards.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91170,"byte_end":91206,"line_start":73,"line_end":73,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91385,"byte_end":91398,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<FrameSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Complete pending write, if any.\n","sig":null,"attributes":[{"value":"/ Complete pending write, if any.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91338,"byte_end":91373,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1807},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127350,"byte_end":127354,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[{"value":"/ A text WebSocket message","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127317,"byte_end":127345,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1810},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127403,"byte_end":127409,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[{"value":"/ A binary WebSocket message","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127368,"byte_end":127398,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1813},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127546,"byte_end":127550,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::message::Message::Ping","value":"Message::Ping(Vec<u8>)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" A ping message with the specified payload","sig":null,"attributes":[{"value":"/ A ping message with the specified payload","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127424,"byte_end":127469,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127474,"byte_end":127477,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127482,"byte_end":127541,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127687,"byte_end":127691,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::message::Message::Pong","value":"Message::Pong(Vec<u8>)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" A pong message with the specified payload","sig":null,"attributes":[{"value":"/ A pong message with the specified payload","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127565,"byte_end":127610,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127615,"byte_end":127618,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127623,"byte_end":127682,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127761,"byte_end":127766,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::message::Message::Close","value":"Message::Close(Option<CloseFrame>)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" A close message with the optional close frame.\n","sig":null,"attributes":[{"value":"/ A close message with the optional close frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127706,"byte_end":127756,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127893,"byte_end":127898,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Frame","qualname":"::protocol::message::Message::Frame","value":"Message::Frame(Frame)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" Raw frame. Note, that you're not going to get this value while reading the message.\n","sig":null,"attributes":[{"value":"/ Raw frame. Note, that you're not going to get this value while reading the message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127801,"byte_end":127888,"line_start":175,"line_end":175,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":1806},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127303,"byte_end":127310,"line_start":160,"line_end":160,"column_start":10,"column_end":17},"name":"Message","qualname":"::protocol::message::Message","value":"pub enum Message {\n    Text(String),\n    Binary(Vec<u8>),\n    Ping(Vec<u8>),\n    Pong(Vec<u8>),\n    Close(Option<CloseFrame>),\n    Frame(Frame),\n}","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1822}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"/ An enum representing the various forms of a WebSocket message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127188,"byte_end":127254,"line_start":158,"line_end":158,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127999,"byte_end":128003,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"pub fn text<S>(S) -> Message where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[{"value":"/ Create a new text WebSocket message from a stringable.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127929,"byte_end":127987,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128197,"byte_end":128203,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"pub fn binary<B>(B) -> Message where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[{"value":"/ Create a new binary WebSocket message by converting to Vec<u8>.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128118,"byte_end":128185,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128377,"byte_end":128384,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a text message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128315,"byte_end":128365,"line_start":196,"line_end":196,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128519,"byte_end":128528,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"pub fn is_binary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a binary message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128455,"byte_end":128507,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128663,"byte_end":128670,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_ping","qualname":"<Message>::is_ping","value":"pub fn is_ping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a ping message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a ping message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128601,"byte_end":128651,"line_start":206,"line_end":206,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128803,"byte_end":128810,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"is_pong","qualname":"<Message>::is_pong","value":"pub fn is_pong(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a pong message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a pong message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128741,"byte_end":128791,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128944,"byte_end":128952,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"is_close","qualname":"<Message>::is_close","value":"pub fn is_close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message ia s close message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message ia s close message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":128881,"byte_end":128932,"line_start":216,"line_end":216,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129080,"byte_end":129083,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[{"value":"/ Get the length of the WebSocket message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129024,"byte_end":129068,"line_start":221,"line_end":221,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129630,"byte_end":129638,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[{"value":"/ Returns true if the WebSocket message has no content.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129482,"byte_end":129539,"line_start":233,"line_end":233,"column_start":5,"column_end":62}},{"value":"/ For example, if the other side of the connection sent an empty string.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129544,"byte_end":129618,"line_start":234,"line_end":234,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129758,"byte_end":129767,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[{"value":"/ Consume the WebSocket and return it as binary data.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":129691,"byte_end":129746,"line_start":239,"line_end":239,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":130245,"byte_end":130254,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"pub fn into_text(Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[{"value":"/ Attempt to consume the WebSocket message and convert it to a String.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":130161,"byte_end":130233,"line_start":250,"line_end":250,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":130825,"byte_end":130832,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Message>::to_text","value":"pub fn to_text(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[{"value":"/ Attempt to get a &str from the WebSocket message,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":130706,"byte_end":130759,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/ this will try to convert binary data to utf8.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":130764,"byte_end":130813,"line_start":264,"line_end":264,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1837},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60030,"byte_end":60036,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Server","qualname":"::protocol::Role::Server","value":"Role::Server","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" This socket is a server\n","sig":null,"attributes":[{"value":"/ This socket is a server","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59998,"byte_end":60025,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1839},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60074,"byte_end":60080,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Client","qualname":"::protocol::Role::Client","value":"Role::Client","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" This socket is a client\n","sig":null,"attributes":[{"value":"/ This socket is a client","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60042,"byte_end":60069,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1836},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59987,"byte_end":59991,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Role","qualname":"::protocol::Role","value":"pub enum Role { Server, Client, }","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1839}],"decl_id":null,"docs":" Indicates a Client or Server role of the websocket\n","sig":null,"attributes":[{"value":"/ Indicates a Client or Server role of the websocket","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59878,"byte_end":59932,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1852},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60174,"byte_end":60189,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"WebSocketConfig","qualname":"::protocol::WebSocketConfig","value":"WebSocketConfig { max_send_queue, max_message_size, max_frame_size, accept_unmasked_frames }","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856}],"decl_id":null,"docs":" The configuration for WebSocket connection.\n","sig":null,"attributes":[{"value":"/ The configuration for WebSocket connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60085,"byte_end":60132,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60410,"byte_end":60424,"line_start":43,"line_end":43,"column_start":9,"column_end":23},"name":"max_send_queue","qualname":"::protocol::WebSocketConfig::max_send_queue","value":"std::option::Option<usize>","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" The size of the send queue. You can use it to turn on/off the backpressure features. `None`\n means here that the size of the queue is unlimited. The default value is the unlimited\n queue.\n","sig":null,"attributes":[{"value":"/ The size of the send queue. You can use it to turn on/off the backpressure features. `None`","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60196,"byte_end":60291,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ means here that the size of the queue is unlimited. The default value is the unlimited","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60296,"byte_end":60386,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ queue.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60391,"byte_end":60401,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60679,"byte_end":60695,"line_start":47,"line_end":47,"column_start":9,"column_end":25},"name":"max_message_size","qualname":"::protocol::WebSocketConfig::max_message_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" The maximum size of a message. `None` means no size limit. The default value is 64 MiB\n which should be reasonably big for all normal use-cases but small enough to prevent\n memory eating by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a message. `None` means no size limit. The default value is 64 MiB","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60445,"byte_end":60535,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ which should be reasonably big for all normal use-cases but small enough to prevent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60540,"byte_end":60627,"line_start":45,"line_end":45,"column_start":5,"column_end":92}},{"value":"/ memory eating by a malicious user.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60632,"byte_end":60670,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61034,"byte_end":61048,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::protocol::WebSocketConfig::max_frame_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" The maximum size of a single message frame. `None` means no size limit. The limit is for\n frame payload NOT including the frame header. The default value is 16 MiB which should\n be reasonably big for all normal use-cases but small enough to prevent memory eating\n by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a single message frame. `None` means no size limit. The limit is for","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60716,"byte_end":60808,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ frame payload NOT including the frame header. The default value is 16 MiB which should","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60813,"byte_end":60903,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ be reasonably big for all normal use-cases but small enough to prevent memory eating","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":60908,"byte_end":60996,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ by a malicious user.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61001,"byte_end":61025,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61470,"byte_end":61492,"line_start":58,"line_end":58,"column_start":9,"column_end":31},"name":"accept_unmasked_frames","qualname":"::protocol::WebSocketConfig::accept_unmasked_frames","value":"bool","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" When set to `true`, the server will accept and handle unmasked frames\n from the client. According to the RFC 6455, the server must close the\n connection to the client in such cases, however it seems like there are\n some popular libraries that are sending unmasked frames, ignoring the RFC.\n By default this option is set to `false`, i.e. according to RFC 6455.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the server will accept and handle unmasked frames","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61069,"byte_end":61142,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ from the client. According to the RFC 6455, the server must close the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61147,"byte_end":61220,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ connection to the client in such cases, however it seems like there are","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61225,"byte_end":61300,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ some popular libraries that are sending unmasked frames, ignoring the RFC.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61305,"byte_end":61383,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ By default this option is set to `false`, i.e. according to RFC 6455.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61388,"byte_end":61461,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62009,"byte_end":62018,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::protocol::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865}],"decl_id":null,"docs":" WebSocket input-output stream.","sig":null,"attributes":[{"value":"/ WebSocket input-output stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61777,"byte_end":61811,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61812,"byte_end":61815,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is THE structure you want to create to be able to speak the WebSocket protocol.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61816,"byte_end":61904,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ It may be created by calling `connect`, `accept` or `client` functions.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61905,"byte_end":61980,"line_start":75,"line_end":75,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62537,"byte_end":62552,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"from_raw_socket","qualname":"<WebSocket<Stream>>::from_raw_socket","value":"pub fn from_raw_socket(Stream, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62197,"byte_end":62270,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62275,"byte_end":62278,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62283,"byte_end":62362,"line_start":87,"line_end":87,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62367,"byte_end":62442,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62447,"byte_end":62525,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63058,"byte_end":63077,"line_start":99,"line_end":99,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>, Role, Option<WebSocketConfig>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62718,"byte_end":62791,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62796,"byte_end":62799,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62804,"byte_end":62883,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62888,"byte_end":62963,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62968,"byte_end":63046,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63415,"byte_end":63422,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WebSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63352,"byte_end":63403,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63538,"byte_end":63545,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WebSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63474,"byte_end":63526,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63651,"byte_end":63661,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocket<Stream>>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63610,"byte_end":63639,"line_start":120,"line_end":120,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63812,"byte_end":63822,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocket<Stream>>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63773,"byte_end":63800,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64146,"byte_end":64154,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocket<Stream>>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63897,"byte_end":63942,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63947,"byte_end":63950,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":63955,"byte_end":64041,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64046,"byte_end":64134,"line_start":133,"line_end":133,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64370,"byte_end":64379,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocket<Stream>>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64215,"byte_end":64261,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64266,"byte_end":64269,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64274,"byte_end":64358,"line_start":140,"line_end":140,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65356,"byte_end":65368,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocket<Stream>>::read_message","value":"pub fn read_message(&mut Self) -> Result<Message>","parent":null,"children":[],"decl_id":null,"docs":" Read a message from stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from stream, if possible.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64490,"byte_end":64534,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64539,"byte_end":64542,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will queue responses to ping and close messages to be sent. It will call","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64547,"byte_end":64628,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ `write_pending` before trying to read in order to make sure that those responses","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64633,"byte_end":64717,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ make progress even if you never call `write_pending`. That does mean that they","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64722,"byte_end":64804,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ get sent out earliest on the next call to `read_message`, `write_message` or `write_pending`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64809,"byte_end":64906,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64911,"byte_end":64914,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ## Closing the connection","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64919,"byte_end":64948,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ When the remote endpoint decides to close the connection this will return","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64953,"byte_end":65030,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ the close message with an optional close frame.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65035,"byte_end":65086,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65091,"byte_end":65094,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ You should continue calling `read_message`, `write_message` or `write_pending` to drive","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65099,"byte_end":65190,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ the reply to the close frame until [Error::ConnectionClosed] is returned. Once that happens","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65195,"byte_end":65290,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ it is safe to drop the underlying connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65295,"byte_end":65344,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67392,"byte_end":67405,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocket<Stream>>::write_message","value":"pub fn write_message(&mut Self, Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to stream, if possible.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65464,"byte_end":65506,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65511,"byte_end":65514,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65519,"byte_end":65613,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ requests. A Pong reply will jump the queue because the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65618,"byte_end":65676,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ [websocket RFC](https://tools.ietf.org/html/rfc6455#section-5.5.2) specifies it should be sent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65681,"byte_end":65779,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ as soon as is practical.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65784,"byte_end":65812,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65817,"byte_end":65820,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that upon receiving a ping message, tungstenite cues a pong reply automatically.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65825,"byte_end":65914,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ When you call either `read_message`, `write_message` or `write_pending` next it will try to send","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":65919,"byte_end":66019,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"/ that pong out if the underlying connection can take more data. This means you should not","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66024,"byte_end":66116,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ respond to ping frames manually.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66121,"byte_end":66157,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66162,"byte_end":66165,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ You can however send pong frames manually in order to indicate a unidirectional heartbeat","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66170,"byte_end":66263,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ as described in [RFC 6455](https://tools.ietf.org/html/rfc6455#section-5.5.3). Note that","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66268,"byte_end":66360,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ if `read_message` returns a ping, you should call `write_pending` until it doesn't return","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66365,"byte_end":66458,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ WouldBlock before passing a pong to `write_message`, otherwise the response to the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66463,"byte_end":66549,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ ping will not be sent, but rather replaced by your custom pong message.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66554,"byte_end":66629,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66634,"byte_end":66637,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66642,"byte_end":66655,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ - If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66660,"byte_end":66737,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66742,"byte_end":66833,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ - If the connection is closed and should be dropped, this will return [Error::ConnectionClosed].","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66838,"byte_end":66938,"line_start":186,"line_end":186,"column_start":5,"column_end":105}},{"value":"/ - If you try again after [Error::ConnectionClosed] was returned either from here or from `read_message`,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":66943,"byte_end":67051,"line_start":187,"line_end":187,"column_start":5,"column_end":113}},{"value":"/   [Error::AlreadyClosed] will be returned. This indicates a program error on your part.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67056,"byte_end":67147,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ - [Error::Io] is returned if the underlying connection returns an error","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67152,"byte_end":67227,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/   (consider these fatal except for WouldBlock).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67232,"byte_end":67283,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ - [Error::Capacity] if your message size is bigger than the configured max message size.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67288,"byte_end":67380,"line_start":191,"line_end":191,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67569,"byte_end":67582,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67524,"byte_end":67557,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68787,"byte_end":68792,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket<Stream>>::close","value":"pub fn close(&mut Self, Option<CloseFrame>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67674,"byte_end":67699,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67704,"byte_end":67707,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67712,"byte_end":67777,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67782,"byte_end":67845,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write_message(Message::Close(..))`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67850,"byte_end":67910,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67915,"byte_end":67918,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ After queing the close frame you should continue calling `read_message` or","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":67923,"byte_end":68001,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ `write_pending` to drive the close handshake to completion.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68006,"byte_end":68069,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68074,"byte_end":68077,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The websocket RFC defines that the underlying connection should be closed","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68082,"byte_end":68159,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ by the server. Tungstenite takes care of this asymmetry for you.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68164,"byte_end":68232,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68237,"byte_end":68240,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When the close handshake is finished (we have both sent and received","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68245,"byte_end":68317,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ a close message), `read_message` or `write_pending` will return","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68322,"byte_end":68389,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ [Error::ConnectionClosed] if this endpoint is the server.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68394,"byte_end":68455,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68460,"byte_end":68463,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If this endpoint is a client, [Error::ConnectionClosed] will only be","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68468,"byte_end":68540,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ returned after the server has closed the underlying connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68545,"byte_end":68612,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68617,"byte_end":68620,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is thus safe to drop the underlying connection as soon as [Error::ConnectionClosed]","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68625,"byte_end":68715,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ is returned from `read_message` or `write_pending`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68720,"byte_end":68775,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68979,"byte_end":68995,"line_start":229,"line_end":229,"column_start":12,"column_end":28},"name":"WebSocketContext","qualname":"::protocol::WebSocketContext","value":"WebSocketContext {  }","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876}],"decl_id":null,"docs":" A context for managing WebSocket stream.\n","sig":null,"attributes":[{"value":"/ A context for managing WebSocket stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":68906,"byte_end":68950,"line_start":227,"line_end":227,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":69605,"byte_end":69608,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketContext>::new","value":"pub fn new(Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages a post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages a post-handshake stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":69525,"byte_end":69593,"line_start":247,"line_end":247,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70035,"byte_end":70054,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocketContext>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages an post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages an post-handshake stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":69954,"byte_end":70023,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70322,"byte_end":70332,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocketContext>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70281,"byte_end":70310,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70476,"byte_end":70486,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocketContext>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70437,"byte_end":70464,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70797,"byte_end":70805,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocketContext>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70548,"byte_end":70593,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70598,"byte_end":70601,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70606,"byte_end":70692,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70697,"byte_end":70785,"line_start":281,"line_end":281,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71019,"byte_end":71028,"line_start":289,"line_end":289,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocketContext>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70864,"byte_end":70910,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70915,"byte_end":70918,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":70923,"byte_end":71007,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71276,"byte_end":71288,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocketContext>::read_message","value":"pub fn read_message<Stream>(&mut Self, &mut Stream) -> Result<Message> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Read a message from the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from the provided stream, if possible.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71088,"byte_end":71145,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71150,"byte_end":71153,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function sends pong and close responses automatically.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71158,"byte_end":71221,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ However, it never blocks on write.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":71226,"byte_end":71264,"line_start":296,"line_end":296,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72596,"byte_end":72609,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocketContext>::write_message","value":"pub fn write_message<Stream>(&mut Self, &mut Stream, Message) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to the provided stream, if possible.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72065,"byte_end":72120,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72125,"byte_end":72128,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72133,"byte_end":72227,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ and Close requests. If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72232,"byte_end":72327,"line_start":320,"line_end":320,"column_start":5,"column_end":100}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72332,"byte_end":72423,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72428,"byte_end":72431,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that only the last pong frame is stored to be sent, and only the","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72436,"byte_end":72509,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ most recent pong frame is sent if multiple pong frames are queued.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":72514,"byte_end":72584,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":74222,"byte_end":74235,"line_start":367,"line_end":367,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocketContext>::write_pending","value":"pub fn write_pending<Stream>(&mut Self, &mut Stream) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":74177,"byte_end":74210,"line_start":366,"line_end":366,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":76223,"byte_end":76228,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocketContext>::close","value":"pub fn close<Stream>(&mut Self, &mut Stream, Option<CloseFrame>) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":75983,"byte_end":76008,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":76013,"byte_end":76016,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":76021,"byte_end":76086,"line_start":407,"line_end":407,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":76091,"byte_end":76154,"line_start":408,"line_end":408,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write(Message::Close(..))`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":76159,"byte_end":76211,"line_start":409,"line_end":409,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134179,"byte_end":134197,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"accept_with_config","qualname":"::server::accept_with_config","value":"pub fn accept_with_config<S: Read + Write>(S, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133707,"byte_end":133750,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133751,"byte_end":133754,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133755,"byte_end":133852,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ used by `accept()`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133853,"byte_end":133876,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133877,"byte_end":133880,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133881,"byte_end":133957,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":133958,"byte_end":134035,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134036,"byte_end":134128,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134129,"byte_end":134171,"line_start":22,"line_end":22,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134748,"byte_end":134754,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"accept","qualname":"::server::accept","value":"pub fn accept<S: Read + Write>(S)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134402,"byte_end":134445,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134446,"byte_end":134449,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134450,"byte_end":134526,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134527,"byte_end":134604,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134605,"byte_end":134697,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134698,"byte_end":134740,"line_start":35,"line_end":35,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135298,"byte_end":135320,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"accept_hdr_with_config","qualname":"::server::accept_hdr_with_config","value":"pub fn accept_hdr_with_config<S: Read + Write,\n                              C: Callback>(S, C, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134904,"byte_end":134947,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134948,"byte_end":134951,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":134952,"byte_end":135049,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ used by `accept_hdr()`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135050,"byte_end":135077,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135078,"byte_end":135081,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135082,"byte_end":135157,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135158,"byte_end":135230,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135231,"byte_end":135290,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135820,"byte_end":135830,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"accept_hdr","qualname":"::server::accept_hdr","value":"pub fn accept_hdr<S: Read + Write, C: Callback>(S, C)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135556,"byte_end":135599,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135600,"byte_end":135603,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135604,"byte_end":135679,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135680,"byte_end":135752,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/server.rs","byte_start":135753,"byte_end":135812,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":1165},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1901},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1206}],"decl_id":null,"docs":" Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","sig":null,"attributes":[{"value":"/ Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136015,"byte_end":136098,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136099,"byte_end":136102,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  There is no dependency on actual TLS implementations. Everything like","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136103,"byte_end":136177,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `native_tls` or `openssl` will work as long as there is a TLS stream supporting standard","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136178,"byte_end":136270,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `Read + Write` traits.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136271,"byte_end":136297,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1902},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136710,"byte_end":136715,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Mode::Plain","value":"Mode::Plain","parent":{"krate":0,"index":1901},"children":[],"decl_id":null,"docs":" Plain mode (`ws://` URL).\n","sig":null,"attributes":[{"value":"/ Plain mode (`ws://` URL).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136676,"byte_end":136705,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1904},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136754,"byte_end":136757,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Mode::Tls","value":"Mode::Tls","parent":{"krate":0,"index":1901},"children":[],"decl_id":null,"docs":" TLS mode (`wss://` URL).\n","sig":null,"attributes":[{"value":"/ TLS mode (`wss://` URL).","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136721,"byte_end":136749,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1901},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136665,"byte_end":136669,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Mode","qualname":"::stream::Mode","value":"pub enum Mode { Plain, Tls, }","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1904}],"decl_id":null,"docs":" Stream mode, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream mode, either plain TCP or TLS.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136584,"byte_end":136625,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1187},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136805,"byte_end":136812,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"NoDelay","qualname":"::stream::NoDelay","value":"NoDelay","parent":null,"children":[{"krate":0,"index":1188}],"decl_id":null,"docs":" Trait to switch TCP_NODELAY.\n","sig":null,"attributes":[{"value":"/ Trait to switch TCP_NODELAY.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136762,"byte_end":136794,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136877,"byte_end":136888,"line_start":33,"line_end":33,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::stream::NoDelay::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Set the TCP_NODELAY option to the given value.\n","sig":null,"attributes":[{"value":"/ Set the TCP_NODELAY option to the given value.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136819,"byte_end":136869,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":137742,"byte_end":137747,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::MaybeTlsStream::Plain","value":"MaybeTlsStream::Plain(S)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" Unencrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Unencrypted socket stream.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":137707,"byte_end":137737,"line_start":64,"line_end":64,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1191},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":137669,"byte_end":137683,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MaybeTlsStream","qualname":"::stream::MaybeTlsStream","value":"pub enum MaybeTlsStream<S: Read + Write> { Plain(S), }","parent":null,"children":[{"krate":0,"index":1193}],"decl_id":null,"docs":" A stream that might be protected with TLS.\n","sig":null,"attributes":[{"value":"/ A stream that might be protected with TLS.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":137595,"byte_end":137641,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":137642,"byte_end":137659,"line_start":62,"line_end":62,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1209},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234}],"decl_id":null,"docs":" Helper traits to ease non-blocking handling.\n","sig":null,"attributes":[{"value":"/ Helper traits to ease non-blocking handling.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":140867,"byte_end":140915,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1224},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141085,"byte_end":141101,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"NonBlockingError","qualname":"::util::NonBlockingError","value":"NonBlockingError: Sized","parent":null,"children":[{"krate":0,"index":1225}],"decl_id":null,"docs":" Non-blocking IO handling.\n","sig":null,"attributes":[{"value":"/ Non-blocking IO handling.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141045,"byte_end":141074,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141183,"byte_end":141200,"line_start":13,"line_end":13,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"::util::NonBlockingError::into_non_blocking","value":"pub fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Convert WouldBlock to None and don't touch other errors.\n","sig":null,"attributes":[{"value":"/ Convert WouldBlock to None and don't touch other errors.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141115,"byte_end":141175,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1231},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141762,"byte_end":141779,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"name":"NonBlockingResult","qualname":"::util::NonBlockingResult","value":"NonBlockingResult","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"decl_id":null,"docs":" Non-blocking IO wrapper.","sig":null,"attributes":[{"value":"/ Non-blocking IO wrapper.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141651,"byte_end":141679,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141680,"byte_end":141683,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `Result<T, E: NonBlockingError>`.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141684,"byte_end":141751,"line_start":36,"line_end":36,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1232},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141852,"byte_end":141858,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::NonBlockingResult::Result","value":"type Result;","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Type of the converted result: `Result<Option<T>, E>`\n","sig":null,"attributes":[{"value":"/ Type of the converted result: `Result<Option<T>, E>`","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141786,"byte_end":141842,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141909,"byte_end":141917,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"no_block","qualname":"::util::NonBlockingResult::no_block","value":"pub fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Perform the non-block conversion.\n","sig":null,"attributes":[{"value":"/ Perform the non-block conversion.","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141864,"byte_end":141901,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1559,"byte_end":1569,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":3379,"byte_end":3389,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":3701,"byte_end":3711,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12753,"byte_end":12759,"line_start":203,"line_end":203,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":13063,"byte_end":13066,"line_start":215,"line_end":215,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14008,"byte_end":14011,"line_start":246,"line_end":246,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14148,"byte_end":14155,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14283,"byte_end":14290,"line_start":258,"line_end":258,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17231,"byte_end":17236,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17346,"byte_end":17351,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17479,"byte_end":17484,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17642,"byte_end":17647,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17797,"byte_end":17802,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17922,"byte_end":17927,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18074,"byte_end":18079,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18220,"byte_end":18225,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29571,"byte_end":29586,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":30815,"byte_end":30830,"line_start":73,"line_end":73,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":35089,"byte_end":35099,"line_start":172,"line_end":172,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":37893,"byte_end":37901,"line_start":231,"line_end":231,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":38331,"byte_end":38339,"line_start":242,"line_end":242,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":42227,"byte_end":42236,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":42589,"byte_end":42598,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":47535,"byte_end":47542,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":47969,"byte_end":47976,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49620,"byte_end":49621,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49991,"byte_end":50001,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50860,"byte_end":50875,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":51716,"byte_end":51731,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55493,"byte_end":55509,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56206,"byte_end":56222,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25103,"byte_end":25115,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26358,"byte_end":26372,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26710,"byte_end":26724,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27035,"byte_end":27049,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27102,"byte_end":27116,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98550,"byte_end":98554,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98893,"byte_end":98900,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":99244,"byte_end":99250,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":99993,"byte_end":99999,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104030,"byte_end":104039,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104227,"byte_end":104236,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":105146,"byte_end":105155,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107178,"byte_end":107188,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107400,"byte_end":107410,"line_start":35,"line_end":35,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108126,"byte_end":108137,"line_start":59,"line_end":59,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108393,"byte_end":108404,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":110397,"byte_end":110408,"line_start":130,"line_end":130,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112759,"byte_end":112764,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117495,"byte_end":117500,"line_start":367,"line_end":367,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":118209,"byte_end":118221,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89851,"byte_end":89862,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90658,"byte_end":90669,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90903,"byte_end":90914,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91834,"byte_end":91844,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":122759,"byte_end":122774,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":124996,"byte_end":125013,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127915,"byte_end":127922,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131298,"byte_end":131305,"line_start":278,"line_end":278,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131412,"byte_end":131419,"line_start":284,"line_end":284,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131528,"byte_end":131535,"line_start":290,"line_end":290,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131638,"byte_end":131645,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131747,"byte_end":131750,"line_start":302,"line_end":302,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131860,"byte_end":131866,"line_start":308,"line_end":308,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":132017,"byte_end":132024,"line_start":316,"line_end":316,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61520,"byte_end":61535,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62173,"byte_end":62182,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64466,"byte_end":64475,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":69502,"byte_end":69518,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":85424,"byte_end":85438,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":86419,"byte_end":86425,"line_start":652,"line_end":652,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136952,"byte_end":136961,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":138076,"byte_end":138090,"line_start":74,"line_end":74,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":139213,"byte_end":139227,"line_start":101,"line_end":101,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":139642,"byte_end":139656,"line_start":113,"line_end":113,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":140434,"byte_end":140448,"line_start":135,"line_end":135,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141253,"byte_end":141260,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141459,"byte_end":141464,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141977,"byte_end":141986,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":321,"byte_end":327,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":337,"byte_end":343,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":40}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":353,"byte_end":358,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":164}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":368,"byte_end":377,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":214}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24651,"byte_end":24657,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":215}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24667,"byte_end":24674,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":337}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":24684,"byte_end":24690,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":387,"byte_end":395,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":614}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":59402,"byte_end":59407,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":615}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89332,"byte_end":89338,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":616}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":417,"byte_end":423,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1165}},{"kind":"Mod","span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/lib.rs","byte_start":504,"byte_end":508,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1209}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":1559,"byte_end":1569,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":3379,"byte_end":3389,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1286},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/buffer.rs","byte_start":3701,"byte_end":3711,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":12753,"byte_end":12759,"line_start":203,"line_end":203,"column_start":28,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":13063,"byte_end":13066,"line_start":215,"line_end":215,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":20,"index":3218},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14008,"byte_end":14011,"line_start":246,"line_end":246,"column_start":28,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":26,"index":908},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14148,"byte_end":14155,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/client.rs","byte_start":14283,"byte_end":14290,"line_start":258,"line_end":258,"column_start":46,"column_end":53},"kind":{"Impl":{"id":7}},"from":{"krate":37,"index":286},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17231,"byte_end":17236,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17346,"byte_end":17351,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17479,"byte_end":17484,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17642,"byte_end":17647,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17797,"byte_end":17802,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":17922,"byte_end":17927,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18074,"byte_end":18079,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/error.rs","byte_start":18220,"byte_end":18225,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":29571,"byte_end":29586,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":30815,"byte_end":30830,"line_start":73,"line_end":73,"column_start":41,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":607}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":35089,"byte_end":35099,"line_start":172,"line_end":172,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":37893,"byte_end":37901,"line_start":231,"line_end":231,"column_start":19,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/client.rs","byte_start":38331,"byte_end":38339,"line_start":242,"line_end":242,"column_start":63,"column_end":71},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":42055,"byte_end":42060,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":42227,"byte_end":42236,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":{"Impl":{"id":38}},"from":{"krate":20,"index":2384},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/headers.rs","byte_start":42589,"byte_end":42598,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":20,"index":2384},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":47535,"byte_end":47542,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":47969,"byte_end":47976,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49238,"byte_end":49243,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49620,"byte_end":49621,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":49991,"byte_end":50001,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1519},"to":{"krate":0,"index":483}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":50860,"byte_end":50875,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/server.rs","byte_start":51716,"byte_end":51731,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":607}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":55493,"byte_end":55509,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":56206,"byte_end":56222,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/machine.rs","byte_start":59028,"byte_end":59033,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":25103,"byte_end":25115,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26358,"byte_end":26372,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":26710,"byte_end":26724,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27035,"byte_end":27049,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/handshake/mod.rs","byte_start":27102,"byte_end":27116,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98550,"byte_end":98554,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":98893,"byte_end":98900,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1644},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":99244,"byte_end":99250,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1603},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":99993,"byte_end":99999,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1603},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104030,"byte_end":104039,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":104227,"byte_end":104236,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/coding.rs","byte_start":105146,"byte_end":105155,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1666},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107178,"byte_end":107188,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":107400,"byte_end":107410,"line_start":35,"line_end":35,"column_start":27,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108126,"byte_end":108137,"line_start":59,"line_end":59,"column_start":18,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":108393,"byte_end":108404,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":110397,"byte_end":110408,"line_start":130,"line_end":130,"column_start":6,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":112759,"byte_end":112764,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":117495,"byte_end":117500,"line_start":367,"line_end":367,"column_start":23,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1760},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/frame.rs","byte_start":118209,"byte_end":118221,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":89851,"byte_end":89862,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90658,"byte_end":90669,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":90903,"byte_end":90914,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/frame/mod.rs","byte_start":91834,"byte_end":91844,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":122759,"byte_end":122774,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":124996,"byte_end":125013,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":127915,"byte_end":127922,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131298,"byte_end":131305,"line_start":278,"line_end":278,"column_start":23,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131412,"byte_end":131419,"line_start":284,"line_end":284,"column_start":28,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131528,"byte_end":131535,"line_start":290,"line_end":290,"column_start":29,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131638,"byte_end":131645,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131747,"byte_end":131750,"line_start":302,"line_end":302,"column_start":24,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":7063},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":131860,"byte_end":131866,"line_start":308,"line_end":308,"column_start":27,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":5,"index":7606},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/message.rs","byte_start":132017,"byte_end":132024,"line_start":316,"line_end":316,"column_start":23,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":61520,"byte_end":61535,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":62173,"byte_end":62182,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":64466,"byte_end":64475,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":69502,"byte_end":69518,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":85424,"byte_end":85438,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/protocol/mod.rs","byte_start":86419,"byte_end":86425,"line_start":652,"line_end":652,"column_start":34,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":136952,"byte_end":136961,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":1,"index":5101},"to":{"krate":0,"index":1187}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":138076,"byte_end":138090,"line_start":74,"line_end":74,"column_start":41,"column_end":55},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":139213,"byte_end":139227,"line_start":101,"line_end":101,"column_start":32,"column_end":46},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":4346}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":139642,"byte_end":139656,"line_start":113,"line_end":113,"column_start":33,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":4406}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/stream.rs","byte_start":140434,"byte_end":140448,"line_start":135,"line_end":135,"column_start":45,"column_end":59},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":1187}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141103,"byte_end":141108,"line_start":11,"line_end":11,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":1224}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141253,"byte_end":141260,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":1,"index":3803},"to":{"krate":0,"index":1224}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141459,"byte_end":141464,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1295},"to":{"krate":0,"index":1224}},{"span":{"file_name":"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.1/src/util.rs","byte_start":141977,"byte_end":141986,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"Impl":{"id":98}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":1231}}]}